{
  "openapi": "3.0.1",
  "info": {
    "title": "Mercury API",
    "description": "This Api will be responsible for overall data distribution.",
    "contact": {
      "name": "Quadrum Solutions",
      "url": "https://quadrum-solutions.ch",
      "email": "info@quadrum-solutions.ch"
    },
    "version": "v1",
    "x-logo": {
      "url": "https://quadrum-solutions.ch/img/Quadrum_logo.png",
      "altText": "Quadrum Solutions"
    }
  },
  "paths": {
    "/Adaptation/Validate/{id}": {
      "get": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to validate an adaptation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the adaptation to test",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdaptationValidationResultDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Adaptation": {
      "post": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Adaptation"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Adaptation/All": {
      "delete": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to delete all adaptations",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Adaptation/EnableAll": {
      "put": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to enable all adaptations",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Adaptation/DisableAll": {
      "put": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to disable all adaptations",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Adaptation/Types": {
      "get": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to get the list of all adaptation types",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Adaptation/{id}": {
      "get": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adaptation"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Adaptation/withcomment": {
      "put": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdaptationRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdaptationRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdaptationRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdaptationRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Adaptation/withcomment/{id}": {
      "patch": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdaptationRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdaptationRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdaptationRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdaptationRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Adaptation/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Audit/LastXRecords": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "Allow to fetch the x last audit records",
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "description": "Number of records to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Audit/LastXrecords/{tableName}": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "Allow to fetch the x last audit records",
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "description": "Number of records to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to filter records for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Audit/RecordsSince": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "Allow to fetch all audit records since the provided date",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "description": "Date from when fetching the records",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Audit/RecordsSince/{tableName}": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "Allow to fetch all audit records since the provided date",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "description": "Date from when fetching the records",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to filter records for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Audit/RecordsBetween": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "Allow to fetch all audit records between two dates",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "description": "Date from when fetching the records",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "Date until when fetching the records",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Audit/RecordsBetween/{tableName}": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "Allow to fetch all audit records between two dates",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "description": "Date from when fetching the records",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "Date until when fetching the records",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Name of the table to filter records for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/BookingCenter": {
      "post": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingCenter"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/BookingCenter/{id}": {
      "patch": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingCenter"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/BookingCenter/withcomment": {
      "put": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenterRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenterRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenterRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenterRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/BookingCenter/withcomment/{id}": {
      "patch": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenterRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenterRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenterRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenterRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/BookingCenter/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/DataLight/GetSingleCell": {
      "get": {
        "tags": [
          "DataLight"
        ],
        "summary": "Allow to fetch the value of a single cell",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "cellPosition",
            "in": "query",
            "description": "Position of the cell",
            "schema": {
              "type": "string"
            },
            "example": "BILAKTFMINOTICHF"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report if needed",
            "schema": {
              "type": "string"
            },
            "example": "M201"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcCellDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcFields/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the calculated field calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcCa/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the Basel 3 CRM CA calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcCrmCa/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the Basel 3 CRM CA calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcCrmLex/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the Basel 3 CRM LEX calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcCrmMona/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the Mona CRM calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcIrrbb/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the Irrbb calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcCrmAsta/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the Asta CRM calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcLiq/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the Liq calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcBsNetting/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the BS netting calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/GetCalcEndpoints": {
      "get": {
        "tags": [
          "Engine"
        ],
        "summary": "Provide the list of endpoints to run the calculations",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Engine/GetCrmCaResults/{lcId}": {
      "get": {
        "tags": [
          "Engine"
        ],
        "summary": "Retrieve CRM CA results",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "counterpartyId",
            "in": "query",
            "description": "Counterparty Id",
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/GetCrmMonaResults/{lcId}": {
      "get": {
        "tags": [
          "Engine"
        ],
        "summary": "Retrieve CRM Mona results",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "counterpartyId",
            "in": "query",
            "description": "Counterparty Id",
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/ApplySingleAdaptation/{lcId}/{adaptationId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Apply a single adaptation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "adaptationId",
            "in": "path",
            "description": "Id of the adaptation to apply",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcFieldsPartial/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Apply a calcfields on set of positions",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Id of the positions to calc",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcFieldsPartial/{lcId}/{positionId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Apply a calcfields on a position",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "positionId",
            "in": "path",
            "description": "Id of the position to calc",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Import/RT01": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to import data from a rt01 file",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the load",
            "schema": {
              "type": "string"
            },
            "example": "My Load"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Reporting date",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-31"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwite the existing data if any",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "linkToLc",
            "in": "query",
            "description": "True to link Load a LoadCollection",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "idLc",
            "in": "query",
            "description": "Specify the id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/RT01s": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to import data from a rt01 file",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the load",
            "schema": {
              "type": "string"
            },
            "example": "My Load"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Reporting date",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-31"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwite the existing data if any",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "linkToLc",
            "in": "query",
            "description": "True to link Load a LoadCollection",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "idLc",
            "in": "query",
            "description": "Specify the id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "inputFiles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "inputFiles": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/RT01Import": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to execute the import step of the UploadRt01",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the load",
            "schema": {
              "type": "string"
            },
            "example": "My Load"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Reporting date",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-31"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwite the existing data if any",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true
          },
          {
            "name": "linkToLc",
            "in": "query",
            "description": "True to link Load a LoadCollection",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "idLc",
            "in": "query",
            "description": "Specify the id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/RT01sImport": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to execute the import step of the UploadRt01",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the load",
            "schema": {
              "type": "string"
            },
            "example": "My Load"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Reporting date",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-31"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwite the existing data if any",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true
          },
          {
            "name": "linkToLc",
            "in": "query",
            "description": "True to link Load a LoadCollection",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "idLc",
            "in": "query",
            "description": "Specify the id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "inputFiles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "inputFiles": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/RT01Calc": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to execute the calculation step of the UploadRt01",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the load",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/Excel": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to import data from an excel file",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the load",
            "schema": {
              "type": "string"
            },
            "example": "My Load"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Reporting date",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-31"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwite the existing data if any",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "linkToLc",
            "in": "query",
            "description": "True to link Load a LoadCollection",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "idLc",
            "in": "query",
            "description": "Specify the id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/Views": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to import from SQL views",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the load",
            "schema": {
              "type": "string"
            },
            "example": "My Load"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Reporting date",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-31"
          },
          {
            "name": "msaId",
            "in": "query",
            "description": "Id of the Mercury Staging Area to load",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 1
          },
          {
            "name": "perimeter",
            "in": "query",
            "description": "Perimeter to import",
            "schema": {
              "type": "string",
              "default": "DEFAULT"
            },
            "example": "DEFAULT"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwite the existing data if any",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "linkToLc",
            "in": "query",
            "description": "True to link Load a LoadCollection",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "idLc",
            "in": "query",
            "description": "Specify the id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/Views/SP": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to import from SQL views",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the load",
            "schema": {
              "type": "string"
            },
            "example": "My Load"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Reporting date",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-31"
          },
          {
            "name": "msaId",
            "in": "query",
            "description": "Id of the Mercury Staging Area to load",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 1
          },
          {
            "name": "perimeter",
            "in": "query",
            "description": "Perimeter to import",
            "schema": {
              "type": "string",
              "default": "DEFAULT"
            },
            "example": "DEFAULT"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwite the existing data if any",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "linkToLc",
            "in": "query",
            "description": "True to link Load a LoadCollection",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "idLc",
            "in": "query",
            "description": "Specify the id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/Logs": {
      "get": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to retrieve logs summaries",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the load",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogSummary"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/LogsDetail": {
      "get": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to retrieve logs details",
        "parameters": [
          {
            "name": "logId",
            "in": "query",
            "description": "Id of the log summary",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogSummary"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/LogsDetailExcel": {
      "get": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to retrieve logs details in Excel format",
        "parameters": [
          {
            "name": "logId",
            "in": "query",
            "description": "Id of the log summary",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/LoadSnbBasket": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to load the SNB security list",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Import/LoadDynamicTable": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to load a dynamic table",
        "parameters": [
          {
            "name": "tablename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/InterestRateCurve": {
      "get": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterestRateCurve"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/InterestRateCurve/{id}": {
      "get": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterestRateCurve"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/InterestRateCurve/withcomment": {
      "put": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurveRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurveRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurveRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurveRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/InterestRateCurve/withcomment/{id}": {
      "patch": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurveRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurveRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurveRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurveRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/InterestRateCurve/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Lifeline/Flags": {
      "get": {
        "tags": [
          "Lifeline"
        ],
        "summary": "Get the list of all the flags",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LifelineDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Lifeline/PositionFlags": {
      "get": {
        "tags": [
          "Lifeline"
        ],
        "summary": "Get the flags of a position",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the Load",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "id",
            "in": "query",
            "description": "Id of the position",
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LifelineFlag"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/List/Load": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "Allow to load a static file from the API",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the static file",
            "schema": {
              "type": "string"
            },
            "example": "Adaptation"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/List/LoadRules": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "Allow to load the rules",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/List/LoadAll": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "Allow to load all the static files from the docker directory",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/List/SaveAll": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "Allow to save all the static files from the docker directory",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/List/Download/{name}": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "Allow to download a static file from the API",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the static file",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Adaptation"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterpartyGroupAris/Load": {
      "post": {
        "tags": [
          "ListCounterpartyGroupAris"
        ],
        "summary": "Allow to load a csv file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/ListCounterpartyGroupAris": {
      "get": {
        "tags": [
          "ListCounterpartyGroupAris"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CounterpartyGroupAris"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ListCounterpartyGroupAris"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupAris"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupAris"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupAris"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupAris"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ListCounterpartyGroupAris"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupAris"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupAris"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupAris"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupAris"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterpartyGroupAris/{id}": {
      "get": {
        "tags": [
          "ListCounterpartyGroupAris"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CounterpartyGroupAris"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ListCounterpartyGroupAris"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ListCounterpartyGroupAris"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterpartyGroupAris/withcomment": {
      "put": {
        "tags": [
          "ListCounterpartyGroupAris"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupArisRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupArisRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupArisRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupArisRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterpartyGroupAris/withcomment/{id}": {
      "patch": {
        "tags": [
          "ListCounterpartyGroupAris"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupArisRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupArisRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupArisRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupArisRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterpartyGroupAris/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "ListCounterpartyGroupAris"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterpartyGroupLex/Load": {
      "post": {
        "tags": [
          "ListCounterpartyGroupLex"
        ],
        "summary": "Allow to load a csv file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/ListCounterpartyGroupLex": {
      "get": {
        "tags": [
          "ListCounterpartyGroupLex"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CounterpartyGroupLex"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ListCounterpartyGroupLex"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLex"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLex"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLex"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ListCounterpartyGroupLex"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLex"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLex"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLex"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterpartyGroupLex/{id}": {
      "get": {
        "tags": [
          "ListCounterpartyGroupLex"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CounterpartyGroupLex"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ListCounterpartyGroupLex"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ListCounterpartyGroupLex"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterpartyGroupLex/withcomment": {
      "put": {
        "tags": [
          "ListCounterpartyGroupLex"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLexRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLexRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLexRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLexRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterpartyGroupLex/withcomment/{id}": {
      "patch": {
        "tags": [
          "ListCounterpartyGroupLex"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLexRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLexRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLexRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyGroupLexRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterpartyGroupLex/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "ListCounterpartyGroupLex"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Load/Detail/{id}": {
      "get": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to retrieve a load with details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the load",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Load/Detail": {
      "get": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to retrieve a load with details",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Load": {
      "post": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Load"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Load/{id}": {
      "patch": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Load"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Load/withcomment": {
      "put": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Load/withcomment/{id}": {
      "patch": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Load/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/LoadCollection": {
      "post": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to create a load collection",
        "requestBody": {
          "description": "Load collection to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoadCollection"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/LoadCollection/withcomment": {
      "put": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollectionRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollectionRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollectionRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollectionRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/LoadCollection/{id}": {
      "patch": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadCollection"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/LoadCollection/withcomment/{id}": {
      "patch": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to patch a load collection with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the load collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Load collection to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollectionRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollectionRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollectionRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollectionRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/LoadCollection/Load": {
      "post": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to add a load to a load collection",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the load",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LoadCollectionId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to remove a load from a load collection",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the load",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LoadCollectionId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/LoadCollection/Detail/{id}": {
      "get": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to retrieve a load collection with details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the load collection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/LoadCollection/Detail": {
      "get": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to retrieve a load collection with details",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/LoadCollection/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Position/Duplicate/{loadId}/{id}": {
      "post": {
        "tags": [
          "Position"
        ],
        "summary": "Allow to duplicate a position",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "Id of the load",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the position",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Position": {
      "get": {
        "tags": [
          "Position"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Position"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Position"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Position/{id}": {
      "get": {
        "tags": [
          "Position"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Position"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Position"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Position/withcomment": {
      "put": {
        "tags": [
          "Position"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Position/withcomment/{id}": {
      "patch": {
        "tags": [
          "Position"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Position/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "Position"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingEntity/Tree/{id}": {
      "get": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to retrieve the reporting structure for a reporting entity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the reporting entity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ReportingEntity": {
      "get": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportingEntity"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingEntity/{id}": {
      "get": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingEntity/withcomment": {
      "put": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntityRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntityRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntityRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntityRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingEntity/withcomment/{id}": {
      "patch": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntityRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntityRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntityRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntityRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingEntity/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingSet": {
      "get": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportingSet"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingSet/{id}": {
      "get": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingSet"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingSet/withcomment": {
      "put": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSetRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSetRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSetRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSetRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingSet/withcomment/{id}": {
      "patch": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSetRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSetRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSetRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSetRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingSet/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Reports/Reload": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to reload the reports files",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Reload/{surveyfilename}": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to reload one survey file",
        "parameters": [
          {
            "name": "surveyfilename",
            "in": "path",
            "description": "Name of the file to reload",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "MONA_U.json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Calculate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to calculate a survey",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "keepEdit",
            "in": "query",
            "description": "True to keep the manual edit of the report",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Validate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to validate a survey",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Breaches": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch breaches",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationBreachDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchSurvey": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch a calculated survey",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "lcIdVariance",
            "in": "query",
            "description": "Load collection ID to get the variance from",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchSurvey/Checks": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch a survey checks",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchSurvey/ListReports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the list of reports for a survey",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchSurvey/StaticListReports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the list of reports for a survey",
        "parameters": [
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchVariances": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch variances of list of cells between two different load collections",
        "parameters": [
          {
            "name": "lcIdA",
            "in": "query",
            "description": "Id of the load collection A",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "lcIdB",
            "in": "query",
            "description": "Id of the load collection B",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "List of cells to get the variance from",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CellCoordinatesDTO"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CellCoordinatesDTO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CellCoordinatesDTO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CellCoordinatesDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchReport": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch a report",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report",
            "schema": {
              "type": "string"
            },
            "example": "M201"
          },
          {
            "name": "lcIdVariance",
            "in": "query",
            "description": "Load collection ID to get the variance from",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchVarianceSurvey": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the variance between two surveys",
        "parameters": [
          {
            "name": "lcIdA",
            "in": "query",
            "description": "Id of the load collection A",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "lcIdB",
            "in": "query",
            "description": "Id of the load collection B",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchVarianceReport": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the variance between two reports",
        "parameters": [
          {
            "name": "lcIdA",
            "in": "query",
            "description": "Id of the load collection A",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "lcIdB",
            "in": "query",
            "description": "Id of the load collection B",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report",
            "schema": {
              "type": "string"
            },
            "example": "M201"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/CalculateAndFetchSurvey": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to calculate and fetch a survey",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "keepEdit",
            "in": "query",
            "description": "True to keep the manual edit of the report",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Audit": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the audit of a cell",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "cellPosition",
            "in": "query",
            "description": "Position of the cell",
            "schema": {
              "type": "string"
            },
            "example": "BILAKTFMINOTICHF"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report if needed",
            "schema": {
              "type": "string"
            },
            "example": "M201"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/AuditPosition": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the audit of a cell for only one position",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "cellPosition",
            "in": "query",
            "description": "Position of the cell",
            "schema": {
              "type": "string"
            },
            "example": "BILAKTFMINOTICHF"
          },
          {
            "name": "positionId",
            "in": "query",
            "description": "Id of the position",
            "schema": {
              "type": "string"
            },
            "example": "28"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report if needed",
            "schema": {
              "type": "string"
            },
            "example": "M201"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Edit": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to edit a cell value",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "cellPosition",
            "in": "query",
            "description": "Position of the cell",
            "schema": {
              "type": "string"
            },
            "example": "BILAKTFMINOTICHF"
          },
          {
            "name": "value",
            "in": "query",
            "description": "New value of the cell",
            "schema": {
              "type": "string"
            },
            "example": "12345"
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Reason of the change",
            "schema": {
              "type": "string"
            },
            "example": "my reason"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report if needed",
            "schema": {
              "type": "string"
            },
            "example": "M201"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/AuditExcel": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the audit of a cell in Excel",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "cellPosition",
            "in": "query",
            "description": "Position of the cell",
            "schema": {
              "type": "string"
            },
            "example": "BILAKTFMINOTICHF"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report if needed",
            "schema": {
              "type": "string"
            },
            "example": "BalanceSheetOverview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/ExportExcel": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the report in Excel",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "useTemplateIfAvailable",
            "in": "query",
            "description": "True to use a template if available",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "divideBy1000",
            "in": "query",
            "description": "True to divide amounts by 1000",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language of the template (F, FR, D, DE, E, EN)",
            "schema": {
              "type": "string",
              "default": "F"
            },
            "example": "FR"
          },
          {
            "name": "customTemplate",
            "in": "query",
            "description": "Name of the custom template to use",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "my_template"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Export": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to export a survey in XML",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchDynReport": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to retieve an object from the database",
        "parameters": [
          {
            "name": "objectName",
            "in": "query",
            "description": "Name of the object",
            "schema": {
              "type": "string"
            },
            "example": "V_my_view"
          },
          {
            "name": "whereClause",
            "in": "query",
            "description": "Where clause",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "lcId=1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Reports/FetchDynReportByLoadId": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to retieve an object from the database by LoadId",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "objectName",
            "in": "query",
            "description": "Name of the object",
            "schema": {
              "type": "string"
            },
            "example": "V_my_view"
          },
          {
            "name": "whereClause",
            "in": "query",
            "description": "Where clause",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "lcId=1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Reports/FetchDynReportByLcId": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to retieve an object from the database by LoadCollectionId",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "objectName",
            "in": "query",
            "description": "Name of the object",
            "schema": {
              "type": "string"
            },
            "example": "V_my_view"
          },
          {
            "name": "whereClause",
            "in": "query",
            "description": "Where clause",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "lcId=1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Reports/List": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to retieve the list of available surveys and reports",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SurveyListDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Rules": {
      "get": {
        "tags": [
          "Rules"
        ],
        "summary": "Allow to fetch all rules",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RuleGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Rules/{id}": {
      "get": {
        "tags": [
          "Rules"
        ],
        "summary": "Allow to fetch one rule with detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleGroup"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Scenario/OnTheFly/{name}": {
      "post": {
        "tags": [
          "Scenario"
        ],
        "summary": "Run a calculation on the fly",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the scenario",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scenarioTypeName",
            "in": "query",
            "description": "Type of scenario to apply",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Scenario/OnTheFly/{lcId}/{name}": {
      "post": {
        "tags": [
          "Scenario"
        ],
        "summary": "Run a calculation on the fly with an existing load collection",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "scenarioTypeName",
            "in": "query",
            "description": "Type of scenario to apply",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Scenario/Scenarios/{lcId}": {
      "post": {
        "tags": [
          "Scenario"
        ],
        "summary": "Run a scenario",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Names of scenarios to run",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Task/Running": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to fetch all the running tasks",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunningTaskDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Task/InQueue": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to fetch all the tasks in queue",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunningTaskDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Task/LastXTasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to fetch the x last created tasks",
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "description": "Number of tasks to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunningTaskDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Task/TasksSince": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to fetch all the tasks since a provided date",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "description": "Date from when fetching the tasks",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunningTaskDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Task/FinishedTasksBetween": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to fetch all the finished tasks between two dates in Excel format",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "description": "Date from when fetching the tasks",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "Date until when fetching the tasks",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunningTaskDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Task/Clean": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to cancel all the running tasks",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Task/Cancel": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to cancel all the running tasks",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Task/Cancel/{id}": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to end one task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the task to cancel",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the technical information",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechnicalInfoDTO"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/Infos": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the technical information",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechnicalInfoDTO"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/Logs": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/BusinessLogs": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/LogFile": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day in a file",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/BusinessLogFile": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day in a file",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/TechLogs": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/TechLogFile": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day in a file",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/Tables": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the list of all tables in the datamodel",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/Columns/{tableName}": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the list of all columns for a specific table",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Technical/Query": {
      "post": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to execute a raw query",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Technical/QueryExcel": {
      "post": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to execute a raw query and get results in an Excel file",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreAmortization/PagedByLoadId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Amortization"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Amortization"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreAmortization/ByLoadId/{loadId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Amortization"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreAmortization/PagedByLcId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Amortization"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Amortization"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreAmortization/ByLcId/{lcId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Amortization"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreAmortization/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch one item by Load Id and Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Amortization"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreAmortization": {
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Amortization"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Amortization"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Amortization"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Amortization"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Amortization"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Amortization"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Amortization"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Amortization"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreAmortization/withcomment": {
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AmortizationRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmortizationRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AmortizationRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AmortizationRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreAmortization/withcomment/{loadId}/{id}": {
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AmortizationRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmortizationRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AmortizationRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AmortizationRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreAmortization/RecordsAuditById/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivative/PagedByLoadId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Derivative"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Derivative"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivative/ByLoadId/{loadId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Derivative"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivative/PagedByLcId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Derivative"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Derivative"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivative/ByLcId/{lcId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Derivative"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivative/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch one item by Load Id and Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Derivative"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivative": {
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Derivative"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Derivative"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Derivative"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Derivative"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Derivative"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Derivative"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Derivative"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Derivative"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivative/withcomment": {
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivative/withcomment/{loadId}/{id}": {
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivative/RecordsAuditById/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativeCalc/PagedByLoadId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeCalc"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeCalc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativeCalc/ByLoadId/{loadId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeCalc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativeCalc/PagedByLcId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeCalc"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeCalc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativeCalc/ByLcId/{lcId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativeCalc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativeCalc/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch one item by Load Id and Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativeCalc"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativeCalc": {
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalc"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalc"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalc"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalc"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalc"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalc"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativeCalc/withcomment": {
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalcRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalcRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalcRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalcRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativeCalc/withcomment/{loadId}/{id}": {
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalcRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalcRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalcRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativeCalcRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativeCalc/RecordsAuditById/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativesSwap/PagedByLoadId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativesSwap"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativesSwap"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativesSwap/ByLoadId/{loadId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativesSwap"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativesSwap/PagedByLcId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativesSwap"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativesSwap"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativesSwap/ByLcId/{lcId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DerivativesSwap"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativesSwap/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch one item by Load Id and Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DerivativesSwap"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativesSwap": {
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwap"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwap"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwap"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwap"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwap"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwap"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativesSwap/withcomment": {
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwapRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwapRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwapRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwapRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativesSwap/withcomment/{loadId}/{id}": {
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwapRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwapRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwapRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DerivativesSwapRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreDerivativesSwap/RecordsAuditById/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreInterestRate/PagedByLoadId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterestRate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterestRate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreInterestRate/ByLoadId/{loadId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterestRate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreInterestRate/PagedByLcId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterestRate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterestRate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreInterestRate/ByLcId/{lcId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterestRate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreInterestRate/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch one item by Load Id and Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterestRate"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreInterestRate": {
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreInterestRate/withcomment": {
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreInterestRate/withcomment/{loadId}/{id}": {
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreInterestRate/RecordsAuditById/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreModuleSpecific/PagedByLoadId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleSpecific"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleSpecific"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreModuleSpecific/ByLoadId/{loadId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleSpecific"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreModuleSpecific/PagedByLcId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleSpecific"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleSpecific"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreModuleSpecific/ByLcId/{lcId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleSpecific"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CoreModuleSpecific/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch one item by Load Id and Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleSpecific"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreModuleSpecific": {
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecific"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecific"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecific"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecific"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecific"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecific"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecific"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecific"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreModuleSpecific/withcomment": {
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecificRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecificRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecificRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecificRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreModuleSpecific/withcomment/{loadId}/{id}": {
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecificRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecificRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecificRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleSpecificRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CoreModuleSpecific/RecordsAuditById/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePledge/PagedByLoadId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pledge"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pledge"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePledge/ByLoadId/{loadId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pledge"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePledge/PagedByLcId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pledge"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pledge"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePledge/ByLcId/{lcId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pledge"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePledge/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch one item by Load Id and Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pledge"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePledge": {
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Pledge"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pledge"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Pledge"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Pledge"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Pledge"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pledge"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Pledge"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Pledge"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePledge/withcomment": {
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PledgeRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PledgeRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PledgeRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PledgeRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePledge/withcomment/{loadId}/{id}": {
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PledgeRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PledgeRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PledgeRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PledgeRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePledge/RecordsAuditById/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition/PagedByLoadId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition/ByLoadId/{loadId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition/PagedByLcId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition/ByLcId/{lcId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch one item by Load Id and Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition": {
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition/withcomment": {
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition/withcomment/{loadId}/{id}": {
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition/RecordsAuditById/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionCalc/PagedByLoadId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionCalc"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionCalc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionCalc/ByLoadId/{loadId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionCalc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionCalc/PagedByLcId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionCalc"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionCalc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionCalc/ByLcId/{lcId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionCalc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionCalc/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch one item by Load Id and Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionCalc"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionCalc": {
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalc"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalc"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalc"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalc"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalc"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalc"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionCalc/withcomment": {
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalcRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalcRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalcRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalcRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionCalc/withcomment/{loadId}/{id}": {
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalcRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalcRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalcRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionCalcRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionCalc/RecordsAuditById/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionSingle/PagedByLoadId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionSingle"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionSingle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionSingle/ByLoadId/{loadId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionSingle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionSingle/PagedByLcId": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionSingle"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchParameter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionSingle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionSingle/ByLcId/{lcId}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch pages by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionSingle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionSingle/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to fetch one item by Load Id and Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionSingle"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionSingle": {
      "post": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingle"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingle"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingle"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingle"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingle"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingle"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionSingle/withcomment": {
      "put": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingleRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingleRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingleRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingleRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionSingle/withcomment/{loadId}/{id}": {
      "patch": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingleRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingleRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingleRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionSingleRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePositionSingle/RecordsAuditById/{loadId}/{id}": {
      "get": {
        "tags": [
          "zCoreGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "loadId",
            "in": "path",
            "description": "LoadId of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Description/Descriptions": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch the description of a field",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Language of the description",
            "schema": {
              "type": "string"
            },
            "example": "FR"
          },
          {
            "name": "field",
            "in": "query",
            "description": "Field of the description",
            "schema": {
              "type": "string"
            },
            "example": "LegalAccountNumber"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the description",
            "schema": {
              "type": "string"
            },
            "example": "10100"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Description"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Description/Values": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all the different values of a field",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Language of the value",
            "schema": {
              "type": "string"
            },
            "example": "FR"
          },
          {
            "name": "field",
            "in": "query",
            "description": "Field of the value",
            "schema": {
              "type": "string"
            },
            "example": "LegalAccountNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Description/Fields": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all the fields for a language",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Language",
            "schema": {
              "type": "string"
            },
            "example": "FR"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Description": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Description"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Description"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Description"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Description"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Description"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Description"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Description"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Description"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Description"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Description/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Description"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Description/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptionRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptionRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptionRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptionRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Description/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptionRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptionRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptionRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptionRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Description/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GlobalInput/FindEntitySpec": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch an item",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Composite Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalInput"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GlobalInput/Search": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch a list of items",
        "parameters": [
          {
            "name": "loadCollectionId",
            "in": "query",
            "description": "Id of the loadcollection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "property1",
            "in": "query",
            "description": "Value of the property 1",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "string"
          },
          {
            "name": "property2",
            "in": "query",
            "description": "Value of the property 2",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "string"
          },
          {
            "name": "property3",
            "in": "query",
            "description": "Value of the property 3",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "string"
          },
          {
            "name": "property4",
            "in": "query",
            "description": "Value of the property 4",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "string"
          },
          {
            "name": "property5",
            "in": "query",
            "description": "Value of the property 5",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GlobalInput"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GlobalInput": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GlobalInput"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GlobalInput/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalInput"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GlobalInput/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInputRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInputRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInputRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInputRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GlobalInput/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInputRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInputRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInputRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInputRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GlobalInput/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Country": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Country/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Country/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Country/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Country/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ArisCounterparty": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArisCounterparty"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterparty"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterparty"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterparty"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterparty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterparty"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterparty"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterparty"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterparty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ArisCounterparty/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArisCounterparty"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ArisCounterparty/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterpartyRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterpartyRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterpartyRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterpartyRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ArisCounterparty/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterpartyRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterpartyRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterpartyRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ArisCounterpartyRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ArisCounterparty/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Currency": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Currency"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Currency/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Currency/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Currency/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Currency/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CalcField": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalcField"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CalcField"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalcField"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalcField"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalcField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CalcField"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalcField"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalcField"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalcField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CalcField/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcField"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CalcField/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CalcFieldRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalcFieldRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalcFieldRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalcFieldRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CalcField/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CalcFieldRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalcFieldRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalcFieldRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalcFieldRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CalcField/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CopyView": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CopyView"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CopyView/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopyView"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CopyView/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyViewRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyViewRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyViewRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyViewRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CopyView/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyViewRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyViewRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyViewRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyViewRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CopyView/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKeyRule": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IrrbbReplicationKeyRule"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRule"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRule"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKeyRule/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IrrbbReplicationKeyRule"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKeyRule/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRuleRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRuleRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRuleRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRuleRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKeyRule/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRuleRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRuleRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRuleRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeyRuleRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKeyRule/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKeySplit": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IrrbbReplicationKeySplit"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplit"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplit"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKeySplit/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IrrbbReplicationKeySplit"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKeySplit/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplitRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplitRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplitRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplitRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKeySplit/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplitRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplitRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplitRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKeySplitRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKeySplit/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbScenario": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IrrbbScenario"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbScenario/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IrrbbScenario"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbScenario/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenarioRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenarioRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenarioRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenarioRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbScenario/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenarioRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenarioRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenarioRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenarioRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbScenario/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Netting": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Netting"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Netting"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Netting"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Netting"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Netting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Netting"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Netting"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Netting"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Netting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Netting/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Netting"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Netting/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NettingRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NettingRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NettingRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NettingRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Netting/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NettingRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NettingRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NettingRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NettingRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Netting/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Parameter": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Parameter"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Parameter/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameter"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Parameter/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Parameter/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Parameter/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ScenarioGroup": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScenarioGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroup"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroup"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroup"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroup"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ScenarioGroup/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioGroup"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ScenarioGroup/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroupRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroupRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroupRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroupRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ScenarioGroup/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroupRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroupRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroupRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioGroupRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ScenarioGroup/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ScenarioRule": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScenarioRule"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRule"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRule"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ScenarioRule/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioRule"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ScenarioRule/withcomment": {
      "put": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRuleRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRuleRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRuleRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRuleRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ScenarioRule/withcomment/{id}": {
      "patch": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRuleRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRuleRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRuleRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioRuleRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ScenarioRule/RecordsAuditById/{id}": {
      "get": {
        "tags": [
          "zGenericDyn"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCommodity/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to fetch one item by Pit and Id",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Commodity"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCommodity": {
      "post": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Commodity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Commodity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Commodity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Commodity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Commodity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Commodity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Commodity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Commodity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCommodity/withcomment": {
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update, with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CommodityRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommodityRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommodityRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommodityRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCommodity/withcomment/{pit}/{id}": {
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CommodityRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommodityRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommodityRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommodityRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCommodity/RecordsAuditById/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterparty/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to fetch one item by Pit and Id",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Counterparty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterparty": {
      "post": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparty"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparty"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparty"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparty"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparty"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparty"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterparty/withcomment": {
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update, with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterparty/withcomment/{pit}/{id}": {
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CounterpartyRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListCounterparty/RecordsAuditById/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListExternalRating/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to fetch one item by Pit and Id",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalRating"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListExternalRating": {
      "post": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRating"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRating"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRating"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRating"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRating"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRating"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRating"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRating"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListExternalRating/withcomment": {
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update, with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRatingRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRatingRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRatingRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRatingRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListExternalRating/withcomment/{pit}/{id}": {
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRatingRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRatingRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRatingRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalRatingRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListExternalRating/RecordsAuditById/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListMarginAgreement/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to fetch one item by Pit and Id",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarginAgreement"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListMarginAgreement": {
      "post": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreement"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreement"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListMarginAgreement/withcomment": {
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update, with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreementRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreementRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreementRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreementRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListMarginAgreement/withcomment/{pit}/{id}": {
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreementRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreementRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreementRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarginAgreementRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListMarginAgreement/RecordsAuditById/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListProperty/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to fetch one item by Pit and Id",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListProperty": {
      "post": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListProperty/withcomment": {
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update, with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListProperty/withcomment/{pit}/{id}": {
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListProperty/RecordsAuditById/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListProxySecurity/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to fetch one item by Pit and Id",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxySecurity"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListProxySecurity": {
      "post": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListProxySecurity/withcomment": {
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update, with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurityRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurityRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurityRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurityRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListProxySecurity/withcomment/{pit}/{id}": {
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurityRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurityRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurityRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySecurityRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListProxySecurity/RecordsAuditById/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListSecurity/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to fetch one item by Pit and Id",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Security"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListSecurity": {
      "post": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Security"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Security"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Security"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Security"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Security"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Security"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Security"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Security"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListSecurity/withcomment": {
      "put": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to update an item with comment",
        "requestBody": {
          "description": "Item to update, with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityRecordAuditUpdateDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityRecordAuditUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityRecordAuditUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityRecordAuditUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListSecurity/withcomment/{pit}/{id}": {
      "patch": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to patch an item with comment",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch with comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityRecordAuditPatchDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityRecordAuditPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityRecordAuditPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityRecordAuditPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ListSecurity/RecordsAuditById/{pit}/{id}": {
      "get": {
        "tags": [
          "zGenericDynList"
        ],
        "summary": "Allow to retrieve all records audit",
        "parameters": [
          {
            "name": "pit",
            "in": "path",
            "description": "PIT of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordAudit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionResult": {
        "type": "object",
        "additionalProperties": false
      },
      "Adaptation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "impact": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "table": {
            "type": "string",
            "nullable": true
          },
          "join": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "bookingCenter": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "aliasDot": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "bookingCenterCondition": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AdaptationJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdaptationOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "AdaptationOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdaptationRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/AdaptationJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdaptationRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Adaptation"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdaptationValidationResultDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "isValid": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Amortization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "nextAmortizationDate": {
            "type": "string",
            "format": "date"
          },
          "amortizationAmount": {
            "type": "number",
            "format": "double"
          },
          "amortizationWeight": {
            "type": "number",
            "format": "float"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AmortizationJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmortizationOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "AmortizationOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmortizationRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/AmortizationJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmortizationRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Amortization"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArisCounterparty": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "domesticForeign": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ArisCounterpartyJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArisCounterpartyOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "ArisCounterpartyOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArisCounterpartyRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ArisCounterpartyJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArisCounterpartyRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ArisCounterparty"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditDTO": {
        "type": "object",
        "properties": {
          "row": {
            "type": "string",
            "nullable": true
          },
          "column": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "positionTech": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "sums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditSumDTO"
            },
            "nullable": true
          },
          "editions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalcEditDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditSumDTO": {
        "type": "object",
        "properties": {
          "rulesReport": {
            "type": "string",
            "nullable": true
          },
          "rulesRow": {
            "type": "string",
            "nullable": true
          },
          "rulesColumn": {
            "type": "string",
            "nullable": true
          },
          "rulesCell": {
            "type": "string",
            "nullable": true
          },
          "rule": {
            "type": "string",
            "nullable": true
          },
          "isReference": {
            "type": "boolean"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnDTO"
            },
            "nullable": true
          },
          "positions": {
            "type": "array",
            "items": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditableBaseEntity": {
        "type": "object",
        "properties": {
          "lastModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookingCenter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "officeType": {
            "type": "string",
            "nullable": true
          },
          "officeCountry": {
            "type": "string",
            "nullable": true
          },
          "officeCanton": {
            "type": "string",
            "nullable": true
          },
          "ownerId": {
            "type": "string",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BookingCenterJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookingCenterOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "BookingCenterOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookingCenterRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/BookingCenterJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookingCenterRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/BookingCenter"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalcCellDTO": {
        "type": "object",
        "properties": {
          "row": {
            "type": "string",
            "nullable": true
          },
          "column": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "positionTech": {
            "type": "string",
            "nullable": true
          },
          "positionTechIgnoreDyn": {
            "type": "string",
            "nullable": true
          },
          "originalValue": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "isEdited": {
            "type": "boolean"
          },
          "isFormula": {
            "type": "boolean"
          },
          "editions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalcEditDTO"
            },
            "nullable": true
          },
          "variance": {
            "$ref": "#/components/schemas/CalcVarianceDTO"
          },
          "toExport": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CalcEditDTO": {
        "type": "object",
        "properties": {
          "lastModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalcField": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "tableFrom": {
            "type": "string",
            "nullable": true
          },
          "fieldFrom": {
            "type": "string",
            "nullable": true
          },
          "tableTo": {
            "type": "string",
            "nullable": true
          },
          "fieldTo": {
            "type": "string",
            "nullable": true
          },
          "loadCollectionIdField": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CalcFieldJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalcFieldOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "CalcFieldOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalcFieldRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CalcFieldJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalcFieldRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CalcField"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalcReportDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalcCellDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalcSurveyDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "calculationDate": {
            "type": "string",
            "format": "date-time"
          },
          "validated": {
            "type": "boolean"
          },
          "exported": {
            "type": "boolean"
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalcReportDTO"
            },
            "nullable": true
          },
          "hasCalcOlderThanLoadCollectionCalc": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CalcVarianceDTO": {
        "type": "object",
        "properties": {
          "valueA": {
            "type": "number",
            "format": "double"
          },
          "valueB": {
            "type": "number",
            "format": "double"
          },
          "relative": {
            "type": "number",
            "format": "double"
          },
          "absolute": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CalculationTypes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "CellCoordinatesDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "report": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ColumnDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Commodity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "pointInTime": {
            "type": "integer",
            "format": "int32"
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "creType": {
            "type": "string",
            "nullable": true
          },
          "marType": {
            "type": "string",
            "nullable": true
          },
          "marSubType": {
            "type": "string",
            "nullable": true
          },
          "unitOfMeaure": {
            "type": "string",
            "nullable": true
          },
          "timeSeriesId": {
            "type": "integer",
            "format": "int64"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CommodityJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommodityOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "CommodityOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommodityRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CommodityJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommodityRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Commodity"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CopyView": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "viewFrom": {
            "type": "string",
            "nullable": true
          },
          "tableTo": {
            "type": "string",
            "nullable": true
          },
          "fieldId": {
            "type": "string",
            "nullable": true
          },
          "deleteTable": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CopyViewJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyViewOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "CopyViewOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CopyViewRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CopyViewJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CopyViewRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CopyView"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Counterparty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "pointInTime": {
            "type": "integer",
            "format": "int32"
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "legalName": {
            "type": "string",
            "nullable": true
          },
          "lei": {
            "type": "string",
            "nullable": true
          },
          "domicileCountry": {
            "type": "string",
            "nullable": true
          },
          "domicileCanton": {
            "type": "string",
            "nullable": true
          },
          "hqDomicile": {
            "type": "string",
            "nullable": true
          },
          "relatedPartyType": {
            "type": "string",
            "nullable": true
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "economicActivityType": {
            "type": "string",
            "nullable": true
          },
          "ratingClass": {
            "type": "integer",
            "format": "int32"
          },
          "externalRatingId": {
            "type": "string",
            "nullable": true
          },
          "externalRatingPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bookingCenterId": {
            "type": "string",
            "nullable": true
          },
          "groupLEXId": {
            "type": "string",
            "nullable": true
          },
          "groupLEXPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "groupARISId": {
            "type": "string",
            "nullable": true
          },
          "groupARISPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "headcount": {
            "type": "integer",
            "format": "int32"
          },
          "turnover": {
            "type": "integer",
            "format": "int32"
          },
          "balanceSheet": {
            "type": "number",
            "format": "float"
          },
          "income1": {
            "type": "integer",
            "format": "int32"
          },
          "income2": {
            "type": "integer",
            "format": "int32"
          },
          "smeFlag": {
            "type": "boolean"
          },
          "adequateSupervisionFlag": {
            "type": "boolean"
          },
          "relationshipManagerId": {
            "type": "string",
            "nullable": true
          },
          "establishedRelationshipFlag": {
            "type": "boolean"
          },
          "cvaWeight": {
            "type": "number",
            "format": "float"
          },
          "lexLimitFlag": {
            "type": "boolean"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CounterpartyGroupAris": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "pointInTime": {
            "type": "integer",
            "format": "int32"
          },
          "reportingEntityId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "arisCode": {
            "type": "string",
            "nullable": true
          },
          "limitAris": {
            "type": "number",
            "format": "float"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CounterpartyGroupArisJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CounterpartyGroupArisOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "CounterpartyGroupArisOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CounterpartyGroupArisRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CounterpartyGroupArisJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CounterpartyGroupArisRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CounterpartyGroupAris"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CounterpartyGroupLex": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "pointInTime": {
            "type": "integer",
            "format": "int32"
          },
          "reportingEntityId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "since": {
            "type": "string",
            "format": "date"
          },
          "limitLex": {
            "type": "number",
            "format": "float"
          },
          "domicileCountry": {
            "type": "string",
            "nullable": true
          },
          "economicActivityType": {
            "type": "string",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CounterpartyGroupLexJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CounterpartyGroupLexOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "CounterpartyGroupLexOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CounterpartyGroupLexRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CounterpartyGroupLexJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CounterpartyGroupLexRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CounterpartyGroupLex"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CounterpartyJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CounterpartyOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "CounterpartyOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CounterpartyRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CounterpartyJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CounterpartyRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Counterparty"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Country": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string"
          },
          "code3": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "subRegion": {
            "type": "string",
            "nullable": true
          },
          "interRegion": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CountryJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "CountryOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CountryJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Country"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Currency": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "numCode": {
            "type": "integer",
            "format": "int32"
          },
          "minorUnit": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "CurrencyOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CurrencyJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Currency"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Derivative": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "subType": {
            "type": "string",
            "nullable": true
          },
          "underlyingCurrency": {
            "type": "string",
            "nullable": true
          },
          "quoteCurrency": {
            "type": "string",
            "nullable": true
          },
          "notionalUnderlyingCurrency": {
            "type": "number",
            "format": "double"
          },
          "spotUnderlyingCurrency": {
            "type": "number",
            "format": "double"
          },
          "strikeUnderlyingCurrency": {
            "type": "number",
            "format": "double"
          },
          "forwardPriceUnderlyingCurrency": {
            "type": "number",
            "format": "double"
          },
          "knockInBarrierUnderlyingCurrency": {
            "type": "number",
            "format": "double"
          },
          "knockOutBarrierUnderlyingCurrency": {
            "type": "number",
            "format": "double"
          },
          "participation": {
            "type": "number",
            "format": "double"
          },
          "multiplier": {
            "type": "number",
            "format": "float"
          },
          "volatilityFlag": {
            "type": "boolean"
          },
          "maturityDate": {
            "type": "string",
            "format": "date"
          },
          "lastExerciseDate": {
            "type": "string",
            "format": "date"
          },
          "startDateReferencePeriod": {
            "type": "string",
            "format": "date"
          },
          "endDateReferencePeriod": {
            "type": "string",
            "format": "date"
          },
          "underlyingSecurityId": {
            "type": "string",
            "nullable": true
          },
          "underlyingSecurityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "underlyingInterestRateId": {
            "type": "string",
            "nullable": true
          },
          "underlyingCommodityId": {
            "type": "string",
            "nullable": true
          },
          "underlyingCommodityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "underlyingReferenceEntityId": {
            "type": "string",
            "nullable": true
          },
          "underlyingReferenceEntityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "underlyingInitialValueUnderlyingCurrency": {
            "type": "number",
            "format": "double"
          },
          "timeSeriesId": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryMethod": {
            "type": "string",
            "nullable": true
          },
          "optionalField": {
            "type": "string",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeCalc": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "numberOfUnderlyings": {
            "type": "number",
            "format": "double"
          },
          "replacementValue": {
            "type": "number",
            "format": "double"
          },
          "underlyingSpotValue": {
            "type": "number",
            "format": "double"
          },
          "underlyingStrikeForwardValue": {
            "type": "number",
            "format": "double"
          },
          "singleUnderlyingSpotValue": {
            "type": "number",
            "format": "double"
          },
          "singleUnderlyingStrikeForwardValue": {
            "type": "number",
            "format": "double"
          },
          "rCurrency": {
            "type": "string",
            "nullable": true
          },
          "pCurrency": {
            "type": "string",
            "nullable": true
          },
          "rAmount": {
            "type": "number",
            "format": "double"
          },
          "pAmount": {
            "type": "number",
            "format": "double"
          },
          "rpv": {
            "type": "number",
            "format": "double"
          },
          "ppv": {
            "type": "number",
            "format": "double"
          },
          "rInterestPayment": {
            "type": "number",
            "format": "double"
          },
          "pInterestPayment": {
            "type": "number",
            "format": "double"
          },
          "impliedVolatility": {
            "type": "number",
            "format": "double"
          },
          "marGammaWeight": {
            "type": "number",
            "format": "double"
          },
          "marGammaNettingCategory": {
            "type": "string",
            "nullable": true
          },
          "assetClass": {
            "type": "string",
            "nullable": true
          },
          "pfeFactor": {
            "type": "number",
            "format": "float"
          },
          "delta": {
            "type": "number",
            "format": "float"
          },
          "gamma": {
            "type": "number",
            "format": "float"
          },
          "vega": {
            "type": "number",
            "format": "float"
          },
          "supervisoryVolatility": {
            "type": "number",
            "format": "float"
          },
          "supervisoryRho": {
            "type": "number",
            "format": "float"
          },
          "sf": {
            "type": "number",
            "format": "float"
          },
          "nettingSetId": {
            "type": "string",
            "nullable": true
          },
          "rNextRefixingDays": {
            "type": "integer",
            "format": "int32"
          },
          "pNextRefixingDays": {
            "type": "integer",
            "format": "int32"
          },
          "lexIssuerExposureRaw": {
            "type": "number",
            "format": "double"
          },
          "issuerGroupLEXId": {
            "type": "string",
            "nullable": true
          },
          "issuerGroupLEXPIT": {
            "type": "integer",
            "format": "int32"
          },
          "issuerLEXId": {
            "type": "string",
            "nullable": true
          },
          "issuerLEXPIT": {
            "type": "integer",
            "format": "int32"
          },
          "issuerGroupARISId": {
            "type": "string",
            "nullable": true
          },
          "issuerGroupARISPIT": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeCalcJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeCalcOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "DerivativeCalcOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeCalcRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DerivativeCalcJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeCalcRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DerivativeCalc"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "DerivativeOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DerivativeJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Derivative"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativesSwap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "rCurrency": {
            "type": "string",
            "nullable": true
          },
          "pCurrency": {
            "type": "string",
            "nullable": true
          },
          "rNotional": {
            "type": "number",
            "format": "double"
          },
          "pNotional": {
            "type": "number",
            "format": "double"
          },
          "multiplier": {
            "type": "number",
            "format": "float"
          },
          "maturityDate": {
            "type": "string",
            "format": "date"
          },
          "startDateReferencePeriod": {
            "type": "string",
            "format": "date"
          },
          "endDateReferencePeriod": {
            "type": "string",
            "format": "date"
          },
          "rUnderlyingSecurityId": {
            "type": "string",
            "nullable": true
          },
          "rUnderlyingSecurityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pUnderlyingSecurityId": {
            "type": "string",
            "nullable": true
          },
          "pUnderlyingSecurityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rVolatilityFlag": {
            "type": "boolean"
          },
          "pVolatilityFlag": {
            "type": "boolean"
          },
          "rUnderlyingInterestRateId": {
            "type": "string",
            "nullable": true
          },
          "pUnderlyingInterestRateId": {
            "type": "string",
            "nullable": true
          },
          "rUnderlyingCommodityId": {
            "type": "string",
            "nullable": true
          },
          "rUnderlyingCommodityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pUnderlyingCommodityId": {
            "type": "string",
            "nullable": true
          },
          "pUnderlyingCommodityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timeSeriesId": {
            "type": "integer",
            "format": "int64"
          },
          "deliveryMethod": {
            "type": "string",
            "nullable": true
          },
          "optionalField": {
            "type": "string",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DerivativesSwapJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativesSwapOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "DerivativesSwapOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativesSwapRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DerivativesSwapJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativesSwapRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DerivativesSwap"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Description": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "field": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DescriptionJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "DescriptionOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DescriptionRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DescriptionJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DescriptionRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Description"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalRating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "pointInTime": {
            "type": "integer",
            "format": "int32"
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "ratingAgency": {
            "type": "string",
            "nullable": true
          },
          "ratingName": {
            "type": "string",
            "nullable": true
          },
          "ratingValue": {
            "type": "string",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ExternalRatingJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalRatingOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "ExternalRatingOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalRatingRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ExternalRatingJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalRatingRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ExternalRating"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GlobalInput": {
        "type": "object",
        "properties": {
          "loadCollectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loadCollection": {
            "$ref": "#/components/schemas/LoadCollection"
          },
          "property1": {
            "type": "string",
            "nullable": true
          },
          "property2": {
            "type": "string",
            "nullable": true
          },
          "property3": {
            "type": "string",
            "nullable": true
          },
          "property4": {
            "type": "string",
            "nullable": true
          },
          "property5": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GlobalInputJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalInputOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "GlobalInputOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GlobalInputRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/GlobalInputJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GlobalInputRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/GlobalInput"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IContractResolver": {
        "type": "object",
        "additionalProperties": false
      },
      "InterestRate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "spread": {
            "type": "number",
            "format": "float"
          },
          "ir": {
            "type": "number",
            "format": "float"
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "nextFixingDate": {
            "type": "string",
            "format": "date"
          },
          "reFixingFrequency": {
            "type": "string",
            "nullable": true
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date"
          },
          "paymentFrequency": {
            "type": "string",
            "nullable": true
          },
          "compoundingType": {
            "type": "string",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InterestRateCurve": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "tenor": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "format": "float"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "maturityInMonths": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "maturityInDays": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InterestRateCurveJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InterestRateCurveOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "InterestRateCurveOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InterestRateCurveRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/InterestRateCurveJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InterestRateCurveRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/InterestRateCurve"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InterestRateJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InterestRateOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "InterestRateOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InterestRateRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/InterestRateJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InterestRateRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/InterestRate"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbReplicationKeyRule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "accountGroupLevel1": {
            "type": "string",
            "nullable": true
          },
          "extendedCondition": {
            "type": "string",
            "nullable": true
          },
          "split": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbReplicationKeyRuleJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IrrbbReplicationKeyRuleOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "IrrbbReplicationKeyRuleOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbReplicationKeyRuleRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/IrrbbReplicationKeyRuleJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbReplicationKeyRuleRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/IrrbbReplicationKeyRule"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbReplicationKeySplit": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "bucket": {
            "type": "integer",
            "format": "int32"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbReplicationKeySplitJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IrrbbReplicationKeySplitOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "IrrbbReplicationKeySplitOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbReplicationKeySplitRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/IrrbbReplicationKeySplitJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbReplicationKeySplitRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/IrrbbReplicationKeySplit"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbScenario": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "nullable": true
          },
          "scenario": {
            "type": "integer",
            "format": "int32"
          },
          "bucket": {
            "type": "integer",
            "format": "int32"
          },
          "shock": {
            "type": "integer",
            "format": "int32"
          },
          "shockPercentage": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbScenarioJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IrrbbScenarioOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "IrrbbScenarioOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbScenarioRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/IrrbbScenarioJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbScenarioRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/IrrbbScenario"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LifelineDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LifelineFlag": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          32
        ],
        "type": "integer",
        "format": "int32"
      },
      "Load": {
        "type": "object",
        "properties": {
          "loadId": {
            "type": "integer",
            "format": "int32"
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "reportingDate": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "isVisible": {
            "type": "boolean"
          },
          "amortizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Amortization"
            },
            "nullable": true
          },
          "derivativeCalcs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeCalc"
            },
            "nullable": true
          },
          "interestRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InterestRate"
            },
            "nullable": true
          },
          "loadCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoadCollection"
            },
            "nullable": true
          },
          "logDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogSummary"
            },
            "nullable": true
          },
          "moduleSpecifics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleSpecific"
            },
            "nullable": true
          },
          "pledges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pledge"
            },
            "nullable": true
          },
          "positionCalcs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCalc"
            },
            "nullable": true
          },
          "positionSingles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionSingle"
            },
            "nullable": true
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Position"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "nullable": true
          },
          "toString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LoadCollection": {
        "type": "object",
        "properties": {
          "loadCollectionId": {
            "type": "integer",
            "format": "int32"
          },
          "createDate": {
            "type": "string",
            "format": "date"
          },
          "reportingDate": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "calculations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoadCollectionCalculation"
            },
            "nullable": true
          },
          "loads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Load"
            },
            "nullable": true
          },
          "globalInputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalInput"
            },
            "nullable": true
          },
          "reportingEntityId": {
            "type": "string",
            "nullable": true
          },
          "isVisible": {
            "type": "boolean"
          },
          "reportingEntity": {
            "$ref": "#/components/schemas/ReportingEntity"
          },
          "surveys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyFullCalc"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LoadCollectionCalculation": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CalculationTypes"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "LoadCollectionJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoadCollectionOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "LoadCollectionOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoadCollectionRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/LoadCollectionJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoadCollectionRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/LoadCollection"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoadJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoadOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "LoadOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoadRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/LoadJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoadRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Load"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "logSummaryId": {
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "computedPositionId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LogType"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "logSummary": {
            "$ref": "#/components/schemas/LogSummary"
          }
        },
        "additionalProperties": false
      },
      "LogSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "loadId": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "warnings": {
            "type": "integer",
            "format": "int64"
          },
          "errors": {
            "type": "integer",
            "format": "int64"
          },
          "lines": {
            "type": "integer",
            "format": "int64"
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "logDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "MarginAgreement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "pointInTime": {
            "type": "integer",
            "format": "int32"
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "remarginingFrequency": {
            "type": "string",
            "nullable": true
          },
          "compensationFlag": {
            "type": "boolean"
          },
          "th": {
            "type": "integer",
            "format": "int32"
          },
          "mta": {
            "type": "integer",
            "format": "int32"
          },
          "nica": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MarginAgreementJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarginAgreementOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "MarginAgreementOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarginAgreementRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/MarginAgreementJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarginAgreementRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/MarginAgreement"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModuleSpecific": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "forceHQLACategory": {
            "type": "string",
            "nullable": true
          },
          "caForceHaircut": {
            "type": "number",
            "format": "float"
          },
          "caForceRiskWeight": {
            "type": "number",
            "format": "float"
          },
          "lcrForceFlow": {
            "type": "integer",
            "format": "int32"
          },
          "lcrForceRate": {
            "type": "integer",
            "format": "int32"
          },
          "lcrIncludeFlow": {
            "type": "boolean"
          },
          "lcrExcludeFlow": {
            "type": "boolean"
          },
          "operationalAmount": {
            "type": "number",
            "format": "double"
          },
          "limitLIQAmount": {
            "type": "number",
            "format": "double"
          },
          "excludeZIR": {
            "type": "boolean"
          },
          "forceLIQCurrency": {
            "type": "string",
            "nullable": true
          },
          "forceLiqTypeOf": {
            "type": "string",
            "nullable": true
          },
          "posRiskDomicile": {
            "type": "string",
            "nullable": true
          },
          "posCounterpartyDomicile": {
            "type": "string",
            "nullable": true
          },
          "posIssuerDomicile": {
            "type": "string",
            "nullable": true
          },
          "posHQDomicile": {
            "type": "string",
            "nullable": true
          },
          "posCounterpartyType": {
            "type": "string",
            "nullable": true
          },
          "posIssuerType": {
            "type": "string",
            "nullable": true
          },
          "posClientEconomicActivityType": {
            "type": "string",
            "nullable": true
          },
          "posIssuerEconomicActivityType": {
            "type": "string",
            "nullable": true
          },
          "beneficialOwnerId": {
            "type": "string",
            "nullable": true
          },
          "posGroupLEXId": {
            "type": "string",
            "nullable": true
          },
          "posRatingClass": {
            "type": "integer",
            "format": "int32"
          },
          "posHeadcount": {
            "type": "integer",
            "format": "int32"
          },
          "posSecuritiesPurchased": {
            "type": "number",
            "format": "double"
          },
          "posSecuritiesSold": {
            "type": "number",
            "format": "double"
          },
          "marInclude": {
            "type": "boolean"
          },
          "marExclude": {
            "type": "boolean"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ModuleSpecificJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleSpecificOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "ModuleSpecificOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModuleSpecificRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ModuleSpecificJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModuleSpecificRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ModuleSpecific"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Netting": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "accountsA": {
            "type": "string",
            "nullable": true
          },
          "accountsB": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NettingJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NettingOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "NettingOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NettingRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/NettingJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NettingRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Netting"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Operation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperationType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "Parameter": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ParameterJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "ParameterOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ParameterJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Parameter"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Pledge": {
        "type": "object",
        "properties": {
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "receiverId": {
            "type": "string",
            "nullable": true
          },
          "payerPledgeLink": {
            "type": "string",
            "nullable": true
          },
          "receiverPledgeLink": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "maxAmount": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PledgeJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PledgeOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "PledgeOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PledgeRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/PledgeJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PledgeRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Pledge"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Position": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "amortization": {
            "$ref": "#/components/schemas/Amortization"
          },
          "derivativeCalc": {
            "$ref": "#/components/schemas/DerivativeCalc"
          },
          "moduleSpecific": {
            "$ref": "#/components/schemas/ModuleSpecific"
          },
          "cInterestRate": {
            "$ref": "#/components/schemas/InterestRate"
          },
          "positionCalc": {
            "$ref": "#/components/schemas/PositionCalc"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "nullable": true
          },
          "positionsCrmCaExposures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmCa"
            },
            "nullable": true
          },
          "positionsCrmCaCollaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmCa"
            },
            "nullable": true
          },
          "positionsCrmLexExposures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmLex"
            },
            "nullable": true
          },
          "positionsCrmLexCollaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmLex"
            },
            "nullable": true
          },
          "positionsCrmMonaExposures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmMona"
            },
            "nullable": true
          },
          "positionsCrmMonaCollaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmMona"
            },
            "nullable": true
          },
          "positionsCrmAstaExposures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmAsta"
            },
            "nullable": true
          },
          "positionsCrmAstaCollaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmAsta"
            },
            "nullable": true
          },
          "positionsCrmLiqExposures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmLiq"
            },
            "nullable": true
          },
          "positionsCrmLiqCollaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmLiq"
            },
            "nullable": true
          },
          "bookingCenterId": {
            "type": "string",
            "nullable": true
          },
          "legalAccountNumber": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "locationCountry": {
            "type": "string",
            "nullable": true
          },
          "internalReference1": {
            "type": "string",
            "nullable": true
          },
          "internalReference2": {
            "type": "string",
            "nullable": true
          },
          "internalReference3": {
            "type": "string",
            "nullable": true
          },
          "internalReference4": {
            "type": "string",
            "nullable": true
          },
          "internalReference5": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "positionCurrencyBookAmount": {
            "type": "number",
            "format": "double"
          },
          "bookAmount": {
            "type": "number",
            "format": "double"
          },
          "encumberedFlag": {
            "type": "boolean"
          },
          "encumberedAmount": {
            "type": "number",
            "format": "double"
          },
          "encumbranceEndDate": {
            "type": "string",
            "format": "date"
          },
          "notional": {
            "type": "number",
            "format": "double"
          },
          "internalLendingValue": {
            "type": "number",
            "format": "double"
          },
          "pv": {
            "type": "number",
            "format": "double"
          },
          "provision": {
            "type": "number",
            "format": "double"
          },
          "capacity": {
            "type": "string",
            "nullable": true
          },
          "maturityDate": {
            "type": "string",
            "format": "date"
          },
          "maturityType": {
            "type": "string",
            "nullable": true
          },
          "impairedFlag": {
            "type": "boolean"
          },
          "nonPerformingFlag": {
            "type": "boolean"
          },
          "ratingClass": {
            "type": "integer",
            "format": "int32"
          },
          "irbFlag": {
            "type": "boolean"
          },
          "relatedPartyType": {
            "type": "string",
            "nullable": true
          },
          "subordination": {
            "type": "boolean"
          },
          "priorityClaimLevel": {
            "type": "integer",
            "format": "int32"
          },
          "participationLevel": {
            "type": "number",
            "format": "float"
          },
          "goodsXBorderFlag": {
            "type": "boolean"
          },
          "pledgeLink": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "generalLedger": {
            "type": "string",
            "nullable": true
          },
          "tradingBookFlag": {
            "type": "boolean"
          },
          "numberOfComponents": {
            "type": "integer",
            "format": "int32"
          },
          "longContractFlag": {
            "type": "boolean"
          },
          "nettingSetId": {
            "type": "string",
            "nullable": true
          },
          "nettingAgreementType": {
            "type": "string",
            "nullable": true
          },
          "counterpartyId": {
            "type": "string",
            "nullable": true
          },
          "guarantorId": {
            "type": "string",
            "nullable": true
          },
          "guarantorPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "counterpartyPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "counterpartyBookingCenterId": {
            "type": "string",
            "nullable": true
          },
          "marginAgreementId": {
            "type": "string",
            "nullable": true
          },
          "marginAgreementPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clearingFacilityTypeOf": {
            "type": "string",
            "nullable": true
          },
          "clearingFacilityId": {
            "type": "string",
            "nullable": true
          },
          "clearingFacilityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pledgedFlag": {
            "type": "boolean"
          },
          "pledgeEndDate": {
            "type": "string",
            "format": "date"
          },
          "collateralHolderId": {
            "type": "string",
            "nullable": true
          },
          "collateralHolderPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contractId": {
            "type": "string",
            "nullable": true
          },
          "propertyId": {
            "type": "string",
            "nullable": true
          },
          "propertyPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "derivativeId": {
            "type": "string",
            "nullable": true
          },
          "derivativeSwapId": {
            "type": "string",
            "nullable": true
          },
          "securityId": {
            "type": "string",
            "nullable": true
          },
          "securityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commodityId": {
            "type": "string",
            "nullable": true
          },
          "commodityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "irReference": {
            "type": "string",
            "nullable": true
          },
          "irSpread": {
            "type": "number",
            "format": "float"
          },
          "irSpreadFlag": {
            "type": "boolean"
          },
          "interestRate": {
            "type": "number",
            "format": "float"
          },
          "irTypeOf": {
            "type": "string",
            "nullable": true
          },
          "irNextFixingDate": {
            "type": "string",
            "format": "date"
          },
          "irReFixingFrequency": {
            "type": "string",
            "nullable": true
          },
          "irNextPaymentDate": {
            "type": "string",
            "format": "date"
          },
          "irPaymentFrequency": {
            "type": "string",
            "nullable": true
          },
          "irCompoundingType": {
            "type": "string",
            "nullable": true
          },
          "irDayCount": {
            "type": "string",
            "nullable": true
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "subType": {
            "type": "string",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PositionCalc": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "mortgageLoanClaimLevel": {
            "type": "integer",
            "format": "int32"
          },
          "accountGroupLevel1": {
            "type": "string",
            "nullable": true
          },
          "webeSector": {
            "type": "string",
            "nullable": true
          },
          "riskCountry": {
            "type": "string",
            "nullable": true
          },
          "ccf": {
            "type": "number",
            "format": "float"
          },
          "caRiskWeight": {
            "type": "number",
            "format": "float"
          },
          "longShort": {
            "type": "string",
            "nullable": true
          },
          "regulatoryHaircut": {
            "type": "number",
            "format": "float"
          },
          "reportingCategory": {
            "type": "string",
            "nullable": true
          },
          "issuerReportingCategory": {
            "type": "string",
            "nullable": true
          },
          "monaExposure": {
            "type": "number",
            "format": "double"
          },
          "caEligibilityFlag": {
            "type": "boolean"
          },
          "caExposureFlag": {
            "type": "boolean"
          },
          "caExposure": {
            "type": "number",
            "format": "double"
          },
          "caIssuerExposure": {
            "type": "number",
            "format": "double"
          },
          "caIssuerRiskWeight": {
            "type": "number",
            "format": "float"
          },
          "caIssuerRWA": {
            "type": "number",
            "format": "double"
          },
          "initialDurationDays": {
            "type": "integer",
            "format": "int32"
          },
          "residualDurationDays": {
            "type": "integer",
            "format": "int32"
          },
          "initialDurationMonths": {
            "type": "integer",
            "format": "int32"
          },
          "residualDurationMonths": {
            "type": "integer",
            "format": "int32"
          },
          "residualEncumberedDurationDays": {
            "type": "integer",
            "format": "int32"
          },
          "chAbroadFlag": {
            "type": "boolean"
          },
          "positionDefaultFlag": {
            "type": "boolean"
          },
          "counterpartyDefaultFlag": {
            "type": "boolean"
          },
          "hqlaCategory": {
            "type": "string",
            "nullable": true
          },
          "ownShare": {
            "type": "string",
            "nullable": true
          },
          "lifeLine": {
            "$ref": "#/components/schemas/LifelineFlag"
          },
          "liqTypeOf": {
            "type": "string",
            "nullable": true
          },
          "excessAmountHVD": {
            "type": "number",
            "format": "double"
          },
          "modifiedDuration": {
            "type": "number",
            "format": "float"
          },
          "zirCategory": {
            "type": "integer",
            "format": "int32"
          },
          "creMortgageLoanClaimLevel1": {
            "type": "number",
            "format": "double"
          },
          "creMortgageLoanClaimLevel2": {
            "type": "number",
            "format": "double"
          },
          "creMortgageLoanClaimLevel3": {
            "type": "number",
            "format": "double"
          },
          "availableLimit": {
            "type": "number",
            "format": "double"
          },
          "operationalAmount": {
            "type": "number",
            "format": "double"
          },
          "pnlCategory": {
            "type": "string",
            "nullable": true
          },
          "lexExposure": {
            "type": "number",
            "format": "double"
          },
          "lexIssuerExposure": {
            "type": "number",
            "format": "double"
          },
          "lexRiskWeight": {
            "type": "number",
            "format": "float"
          },
          "lexIssuerRiskWeight": {
            "type": "number",
            "format": "float"
          },
          "lexIssuerRWA": {
            "type": "number",
            "format": "double"
          },
          "lexccf": {
            "type": "number",
            "format": "double"
          },
          "lexAdjustmentFactor": {
            "type": "number",
            "format": "double"
          },
          "lexIssuerAdjustmentFactor": {
            "type": "number",
            "format": "double"
          },
          "irResidualPaymentDays": {
            "type": "integer",
            "format": "int32"
          },
          "groupLEXId": {
            "type": "string",
            "nullable": true
          },
          "irNextPaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "groupLEXPIT": {
            "type": "integer",
            "format": "int32"
          },
          "counterpartyLEXId": {
            "type": "string",
            "nullable": true
          },
          "counterpartyLEXPIT": {
            "type": "integer",
            "format": "int32"
          },
          "lexUnknownClientFlag": {
            "type": "boolean"
          },
          "limitLIQAmount": {
            "type": "number",
            "format": "double"
          },
          "groupARISId": {
            "type": "string",
            "nullable": true
          },
          "groupARISPIT": {
            "type": "integer",
            "format": "int32"
          },
          "lexMortgageLoanClaimLevel1": {
            "type": "number",
            "format": "double"
          },
          "lexMortgageLoanClaimLevel2": {
            "type": "number",
            "format": "double"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PositionCalcJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCalcOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "PositionCalcOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionCalcRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/PositionCalcJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionCalcRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/PositionCalc"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionCrmAsta": {
        "type": "object",
        "properties": {
          "loadCollectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loadCollection": {
            "$ref": "#/components/schemas/LoadCollection"
          },
          "positionExposure": {
            "$ref": "#/components/schemas/Position"
          },
          "positionCollateral": {
            "$ref": "#/components/schemas/Position"
          },
          "collateralLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "collateralId": {
            "type": "string",
            "nullable": true
          },
          "exposureLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "exposureId": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "amountCovered": {
            "type": "number",
            "format": "double"
          },
          "astaUltimateRiskCountry": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionCrmCa": {
        "type": "object",
        "properties": {
          "loadCollectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loadCollection": {
            "$ref": "#/components/schemas/LoadCollection"
          },
          "positionExposure": {
            "$ref": "#/components/schemas/Position"
          },
          "positionCollateral": {
            "$ref": "#/components/schemas/Position"
          },
          "collateralLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "collateralId": {
            "type": "string",
            "nullable": true
          },
          "exposureLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "exposureId": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "amountCovered": {
            "type": "number",
            "format": "double"
          },
          "collateralAmountUsed": {
            "type": "number",
            "format": "double"
          },
          "fxHaircut": {
            "type": "number",
            "format": "double"
          },
          "maturityHaircut": {
            "type": "number",
            "format": "double"
          },
          "adaptedHaircut": {
            "type": "number",
            "format": "double"
          },
          "rwa": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PositionCrmLex": {
        "type": "object",
        "properties": {
          "loadCollectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loadCollection": {
            "$ref": "#/components/schemas/LoadCollection"
          },
          "positionExposure": {
            "$ref": "#/components/schemas/Position"
          },
          "positionCollateral": {
            "$ref": "#/components/schemas/Position"
          },
          "collateralLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "collateralId": {
            "type": "string",
            "nullable": true
          },
          "exposureLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "exposureId": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "amountCovered": {
            "type": "number",
            "format": "double"
          },
          "collateralAmountUsed": {
            "type": "number",
            "format": "double"
          },
          "fxHaircut": {
            "type": "number",
            "format": "double"
          },
          "maturityHaircut": {
            "type": "number",
            "format": "double"
          },
          "adaptedHaircut": {
            "type": "number",
            "format": "double"
          },
          "rwa": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PositionCrmLiq": {
        "type": "object",
        "properties": {
          "loadCollectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loadCollection": {
            "$ref": "#/components/schemas/LoadCollection"
          },
          "positionExposure": {
            "$ref": "#/components/schemas/Position"
          },
          "positionCollateral": {
            "$ref": "#/components/schemas/Position"
          },
          "collateralLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "collateralId": {
            "type": "string",
            "nullable": true
          },
          "exposureLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "exposureId": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "amountCovered": {
            "type": "number",
            "format": "double"
          },
          "collateralPVUsed": {
            "type": "number",
            "format": "double"
          },
          "collateralHQLACategory": {
            "type": "string",
            "nullable": true
          },
          "collateralLiqTypeOf": {
            "type": "string",
            "nullable": true
          },
          "collateralCARiskWeight": {
            "type": "number",
            "format": "float"
          },
          "isRetailDepositRunoff": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PositionCrmMona": {
        "type": "object",
        "properties": {
          "loadCollectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loadCollection": {
            "$ref": "#/components/schemas/LoadCollection"
          },
          "positionExposure": {
            "$ref": "#/components/schemas/Position"
          },
          "positionCollateral": {
            "$ref": "#/components/schemas/Position"
          },
          "collateralLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "collateralId": {
            "type": "string",
            "nullable": true
          },
          "exposureLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "exposureId": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "amountCovered": {
            "type": "number",
            "format": "double"
          },
          "collateralTypeOf": {
            "type": "string",
            "nullable": true
          },
          "collateralSubType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "PositionOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/PositionJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Position"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionSingle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "computedId": {
            "type": "integer",
            "format": "int64"
          },
          "accountNumber": {
            "type": "integer",
            "format": "int32"
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "riskDomicile": {
            "type": "string",
            "nullable": true
          },
          "counterpartyDomicile": {
            "type": "string",
            "nullable": true
          },
          "issuerDomicile": {
            "type": "string",
            "nullable": true
          },
          "hqDomicile": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "ccpType": {
            "type": "integer",
            "format": "int32"
          },
          "foreignCurrencyAmount": {
            "type": "number",
            "format": "double"
          },
          "referenceCurrencyAmount": {
            "type": "number",
            "format": "double"
          },
          "encumberedAmount": {
            "type": "number",
            "format": "double"
          },
          "replacementValueAmount": {
            "type": "number",
            "format": "double"
          },
          "contractVolumeAmount": {
            "type": "number",
            "format": "double"
          },
          "lendingValueAmount": {
            "type": "number",
            "format": "float"
          },
          "marketValueAmount": {
            "type": "number",
            "format": "double"
          },
          "counterpartyType": {
            "type": "integer",
            "format": "int32"
          },
          "maturityDate": {
            "type": "string",
            "format": "date"
          },
          "maturityType": {
            "type": "integer",
            "format": "int32"
          },
          "businessType": {
            "type": "integer",
            "format": "int32"
          },
          "irbReportingCategory": {
            "type": "integer",
            "format": "int32"
          },
          "subordination": {
            "type": "integer",
            "format": "int32"
          },
          "quotationType": {
            "type": "integer",
            "format": "int32"
          },
          "pledgedCashType": {
            "type": "integer",
            "format": "int32"
          },
          "valuationMethod": {
            "type": "integer",
            "format": "int32"
          },
          "relatedParties": {
            "type": "integer",
            "format": "int32"
          },
          "periodicRevaluation": {
            "type": "integer",
            "format": "int32"
          },
          "mortgageRank": {
            "type": "integer",
            "format": "int32"
          },
          "propertyPledge": {
            "type": "integer",
            "format": "int32"
          },
          "externalRating": {
            "type": "integer",
            "format": "int32"
          },
          "finrepMapping": {
            "type": "integer",
            "format": "int32"
          },
          "qualifiedParticipationLevel": {
            "type": "integer",
            "format": "int32"
          },
          "underlyingInstrumentType": {
            "type": "integer",
            "format": "int32"
          },
          "issuerType": {
            "type": "integer",
            "format": "int32"
          },
          "issuerId": {
            "type": "string",
            "nullable": true
          },
          "portfolioId": {
            "type": "string",
            "nullable": true
          },
          "nettingAgreementType": {
            "type": "integer",
            "format": "int32"
          },
          "clientType": {
            "type": "integer",
            "format": "int32"
          },
          "liquidityCategory": {
            "type": "integer",
            "format": "int32"
          },
          "counterpartyGroupId": {
            "type": "string",
            "nullable": true
          },
          "provisionAmount": {
            "type": "number",
            "format": "double"
          },
          "issuedAmount": {
            "type": "number",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "exchangeRate": {
            "type": "number",
            "format": "float"
          },
          "securityId": {
            "type": "string",
            "nullable": true
          },
          "issuerGroupId": {
            "type": "string",
            "nullable": true
          },
          "instrumentId": {
            "type": "string",
            "nullable": true
          },
          "numberOfUnderlying": {
            "type": "number",
            "format": "double"
          },
          "deltaValue": {
            "type": "number",
            "format": "float"
          },
          "interestRate": {
            "type": "number",
            "format": "float"
          },
          "interestPaymentFrequency": {
            "type": "integer",
            "format": "int32"
          },
          "interestRateType": {
            "type": "integer",
            "format": "int32"
          },
          "nextInterestFixingDate": {
            "type": "string",
            "format": "date"
          },
          "vegaValue": {
            "type": "number",
            "format": "float"
          },
          "instrumentType": {
            "type": "integer",
            "format": "int32"
          },
          "internalAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "intercompanyEntity": {
            "type": "string",
            "nullable": true
          },
          "intercompanyEntityType": {
            "type": "string",
            "nullable": true
          },
          "collateralPledgeId": {
            "type": "string",
            "nullable": true
          },
          "nextInterestPaymentDate": {
            "type": "string",
            "format": "date"
          },
          "counterpartySize": {
            "type": "integer",
            "format": "int32"
          },
          "canton": {
            "type": "string",
            "nullable": true
          },
          "nettingSetId1": {
            "type": "string",
            "nullable": true
          },
          "nettingSetId2": {
            "type": "string",
            "nullable": true
          },
          "noga": {
            "type": "integer",
            "format": "int32"
          },
          "customField1": {
            "type": "string",
            "nullable": true
          },
          "customField2": {
            "type": "string",
            "nullable": true
          },
          "customField3": {
            "type": "number",
            "format": "double"
          },
          "customField4": {
            "type": "integer",
            "format": "int32"
          },
          "customField5": {
            "type": "integer",
            "format": "int32"
          },
          "probabilityDefault": {
            "type": "number",
            "format": "float"
          },
          "expectedLoss": {
            "type": "number",
            "format": "float"
          },
          "encumberedDate": {
            "type": "string",
            "format": "date"
          },
          "startingDate": {
            "type": "string",
            "format": "date"
          },
          "classLoansProbabilityDefault": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PositionSingleJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionSingleOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "PositionSingleOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionSingleRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/PositionSingleJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionSingleRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/PositionSingle"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Property": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "pointInTime": {
            "type": "integer",
            "format": "int32"
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "useOf": {
            "type": "string",
            "nullable": true
          },
          "marketValue": {
            "type": "number",
            "format": "double"
          },
          "acquisitionValue": {
            "type": "number",
            "format": "double"
          },
          "rentalValue": {
            "type": "number",
            "format": "double"
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "canton": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "acquisitionDate": {
            "type": "string",
            "format": "date"
          },
          "lendingValue": {
            "type": "number",
            "format": "double"
          },
          "portfolioId": {
            "type": "string",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PropertyJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "PropertyOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PropertyRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/PropertyJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PropertyRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Property"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProxySecurity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "pointInTime": {
            "type": "integer",
            "format": "int32"
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "proxySecurityId": {
            "type": "string",
            "nullable": true
          },
          "proxySecurityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "proxyCommodityId": {
            "type": "string",
            "nullable": true
          },
          "proxyCommodityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "proxyPropertyId": {
            "type": "string",
            "nullable": true
          },
          "proxyPropertyPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProxySecurityJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProxySecurityOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "ProxySecurityOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProxySecurityRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ProxySecurityJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProxySecurityRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ProxySecurity"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecordAudit": {
        "type": "object",
        "properties": {
          "table": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "field": {
            "type": "string",
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportListDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "hasEdited": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReportingEntity": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "loadCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoadCollection"
            },
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "snbCode": {
            "type": "string",
            "nullable": true
          },
          "finmaCategory": {
            "type": "integer",
            "format": "int32"
          },
          "consoLevelBankOffice": {
            "type": "boolean"
          },
          "consoLevelParentCompany": {
            "type": "boolean"
          },
          "consoLevelGroup": {
            "type": "boolean"
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "nullable": true
          },
          "postBox": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactType": {
            "type": "string",
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "subGroupName": {
            "type": "string",
            "nullable": true
          },
          "divisionName": {
            "type": "string",
            "nullable": true
          },
          "referredPerson": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingEntityJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportingEntityOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "ReportingEntityOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingEntityRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ReportingEntityJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingEntityRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ReportingEntity"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingSet": {
        "type": "object",
        "properties": {
          "reportingEntityId": {
            "type": "string",
            "nullable": true
          },
          "consolidatedBookingCenterId": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "officeType": {
            "type": "string",
            "nullable": true
          },
          "officeCountry": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ReportingSetJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportingSetOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "ReportingSetOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingSetRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ReportingSetJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingSetRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ReportingSet"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RuleGroup": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "where": {
            "type": "string",
            "nullable": true
          },
          "tableAlias": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "field": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isMSA": {
            "type": "boolean"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "ruleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RuleItem": {
        "type": "object",
        "properties": {
          "ruleGroupId": {
            "type": "string",
            "nullable": true
          },
          "ruleGroup": {
            "$ref": "#/components/schemas/RuleGroup"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RunningTaskDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "query": {
            "$ref": "#/components/schemas/RunningTaskQueryDTO"
          },
          "isStarted": {
            "type": "boolean",
            "readOnly": true
          },
          "isOver": {
            "type": "boolean",
            "readOnly": true
          },
          "isCompleted": {
            "type": "boolean",
            "readOnly": true
          },
          "isError": {
            "type": "boolean",
            "readOnly": true
          },
          "isCancelled": {
            "type": "boolean"
          },
          "isCancelling": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RunningTaskQueryDTO": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32"
          },
          "lcId": {
            "type": "integer",
            "format": "int32"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScenarioGroup": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "scenarioRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScenarioRule"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ScenarioGroupJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScenarioGroupOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "ScenarioGroupOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScenarioGroupRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ScenarioGroupJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScenarioGroupRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ScenarioGroup"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScenarioRule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "scenarioName": {
            "type": "string",
            "nullable": true
          },
          "scenarioGroup": {
            "$ref": "#/components/schemas/ScenarioGroup"
          },
          "impact": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "table": {
            "type": "string",
            "nullable": true
          },
          "join": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ScenarioRuleJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScenarioRuleOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "ScenarioRuleOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScenarioRuleRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ScenarioRuleJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScenarioRuleRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/ScenarioRule"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchParameter": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "operator": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Security": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "pointInTime": {
            "type": "integer",
            "format": "int32"
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isin": {
            "type": "string",
            "nullable": true
          },
          "bbgTicker": {
            "type": "string",
            "nullable": true
          },
          "figi": {
            "type": "string",
            "nullable": true
          },
          "sedol": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "listedFlag": {
            "type": "boolean"
          },
          "indexFlag": {
            "type": "boolean"
          },
          "mainIndexFlag": {
            "type": "boolean"
          },
          "revaluationFrequency": {
            "type": "string",
            "nullable": true
          },
          "snbEligibleFlag": {
            "type": "boolean"
          },
          "cmaApproachType": {
            "type": "string",
            "nullable": true
          },
          "cmaRiskIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "cmasaRwFlag": {
            "type": "boolean"
          },
          "ratingClass": {
            "type": "integer",
            "format": "int32"
          },
          "externalRatingId": {
            "type": "string",
            "nullable": true
          },
          "externalRatingPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maturityDate": {
            "type": "string",
            "format": "date"
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "subType": {
            "type": "string",
            "nullable": true
          },
          "interestRateId": {
            "type": "string",
            "nullable": true
          },
          "issuerId": {
            "type": "string",
            "nullable": true
          },
          "issuerPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "investmentGradeFlag": {
            "type": "boolean"
          },
          "timeSeriesId": {
            "type": "integer",
            "format": "int64"
          },
          "hqlaCategory": {
            "type": "string",
            "nullable": true
          },
          "lexGuaranteedFlag": {
            "type": "boolean"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SecurityJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "SecurityOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SecurityRecordAuditPatchDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/SecurityJsonPatchDocument"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SecurityRecordAuditUpdateDTO": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Security"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SurveyCellCalc": {
        "type": "object",
        "properties": {
          "row": {
            "type": "string",
            "nullable": true
          },
          "column": {
            "type": "string",
            "nullable": true
          },
          "sums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyCellCalcSum"
            },
            "nullable": true
          },
          "originalValue": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "isRef": {
            "type": "boolean"
          },
          "dependencyOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isEdited": {
            "type": "boolean"
          },
          "toExport": {
            "type": "boolean"
          },
          "mappingTech": {
            "type": "string",
            "nullable": true
          },
          "mappingDynTech": {
            "type": "string",
            "nullable": true
          },
          "mapping": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mappingDyn": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "editions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditableBaseEntity"
            },
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "positionTech": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "positionTechIgnoreDyn": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SurveyCellCalcSum": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "where": {
            "type": "string",
            "nullable": true
          },
          "audit": {
            "type": "string",
            "nullable": true
          },
          "auditSummary": {
            "type": "string",
            "nullable": true
          },
          "conditionReport": {
            "type": "string",
            "nullable": true
          },
          "conditionRow": {
            "type": "string",
            "nullable": true
          },
          "conditionColumn": {
            "type": "string",
            "nullable": true
          },
          "conditionCell": {
            "type": "string",
            "nullable": true
          },
          "sum": {
            "type": "string",
            "nullable": true
          },
          "isAlphanumeric": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SurveyFullCalc": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "loadCollectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loadCollection": {
            "$ref": "#/components/schemas/LoadCollection"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "isContentBased": {
            "type": "boolean"
          },
          "validated": {
            "type": "boolean"
          },
          "exported": {
            "type": "boolean"
          },
          "calcDate": {
            "type": "string",
            "format": "date-time"
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyReportCalc"
            },
            "nullable": true
          },
          "breachedValidationRuleSets": {
            "maxItems": -1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SurveyListDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "isContentBased": {
            "type": "boolean"
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportListDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SurveyReportCalc": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "dependencyOrder": {
            "type": "integer",
            "format": "int32"
          },
          "cellsCalc": {
            "maxItems": -1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyCellCalc"
            },
            "nullable": true
          },
          "surveyCalcId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "surveyFullCalc": {
            "$ref": "#/components/schemas/SurveyFullCalc"
          }
        },
        "additionalProperties": false
      },
      "TechnicalInfoDTO": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "datetime": {
            "type": "string",
            "format": "date-time"
          },
          "dbProviderName": {
            "type": "string",
            "nullable": true
          },
          "dbServerName": {
            "type": "string",
            "nullable": true
          },
          "dbName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "microseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nanoseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMicroseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalNanoseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "position": {
            "$ref": "#/components/schemas/Position"
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "capacity": {
            "type": "string",
            "nullable": true
          },
          "traderId": {
            "type": "string",
            "nullable": true
          },
          "tradingDeskId": {
            "type": "string",
            "nullable": true
          },
          "transactionDate": {
            "type": "string",
            "format": "date"
          },
          "soldAmount": {
            "type": "number",
            "format": "double"
          },
          "soldQuantity": {
            "type": "number",
            "format": "double"
          },
          "purchasedAmount": {
            "type": "number",
            "format": "double"
          },
          "purchasedQuantity": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ValidationBreachCellsDTO": {
        "type": "object",
        "properties": {
          "position": {
            "type": "string",
            "nullable": true
          },
          "report": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationBreachDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "errorDescription": {
            "type": "string",
            "nullable": true
          },
          "isError": {
            "type": "boolean"
          },
          "tolerance": {
            "type": "number",
            "format": "double"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationBreachDetailDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationBreachDetailDTO": {
        "type": "object",
        "properties": {
          "isTechError": {
            "type": "boolean"
          },
          "formulaTech": {
            "type": "string",
            "nullable": true
          },
          "formulaValues": {
            "type": "string",
            "nullable": true
          },
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationBreachCellsDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Input your Bearer token in this format - Bearer {your token here} to access this API",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}