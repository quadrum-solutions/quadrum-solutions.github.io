{
  "openapi": "3.0.1",
  "info": {
    "title": "Mercury API",
    "description": "This Api will be responsible for overall data distribution.",
    "contact": {
      "name": "Quadrum Solutions",
      "url": "https://quadrum-solutions.ch",
      "email": "info@quadrum-solutions.ch"
    },
    "version": "v1",
    "x-logo": {
      "url": "https://quadrum-solutions.ch/img/Quadrum_logo.png",
      "altText": "Quadrum Solutions"
    }
  },
  "paths": {
    "/Adaptation": {
      "get": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Adaptation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Adaptation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Adaptation/{id}": {
      "get": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adaptation"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Adaptation"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/BookingCenter": {
      "post": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCenter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingCenter"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/BookingCenter/{id}": {
      "patch": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingCenter"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BookingCenter"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition/PagedByLoadId": {
      "get": {
        "tags": [
          "CorePosition"
        ],
        "summary": "Allow to fetch pages items by Load Id",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition/PagedByLcId": {
      "get": {
        "tags": [
          "CorePosition"
        ],
        "summary": "Allow to fetch pages items by LoadCollection",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition": {
      "post": {
        "tags": [
          "CorePosition"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CorePosition"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CorePosition/{id}": {
      "patch": {
        "tags": [
          "CorePosition"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "LoadId of the item",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to patch",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CorePosition"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "LoadId of the item",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Descriptions/Descriptions": {
      "get": {
        "tags": [
          "Descriptions"
        ],
        "summary": "Allow to fetch the description of a field",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Language of the description",
            "schema": {
              "type": "string"
            },
            "example": "FR"
          },
          {
            "name": "field",
            "in": "query",
            "description": "Field of the description",
            "schema": {
              "type": "string"
            },
            "example": "LegalAccountNumber"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the description",
            "schema": {
              "type": "string"
            },
            "example": "10100"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Description"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Descriptions/Values": {
      "get": {
        "tags": [
          "Descriptions"
        ],
        "summary": "Allow to fetch all the different values of a field",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Language of the value",
            "schema": {
              "type": "string"
            },
            "example": "FR"
          },
          {
            "name": "field",
            "in": "query",
            "description": "Field of the value",
            "schema": {
              "type": "string"
            },
            "example": "LegalAccountNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Descriptions/Fields": {
      "get": {
        "tags": [
          "Descriptions"
        ],
        "summary": "Allow to fetch all the fields for a language",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Language",
            "schema": {
              "type": "string"
            },
            "example": "FR"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Engine/CalcFields/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the calculated field calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcCa/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the Basel 3 CRM calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcCrmCa/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the Basel 3 CRM calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcCrmMona/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the Mona CRM calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/CalcIrrbb/{lcId}": {
      "post": {
        "tags": [
          "Engine"
        ],
        "summary": "Run the Irrbb calculation",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection to run",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/GetCrmCaResults/{lcId}": {
      "get": {
        "tags": [
          "Engine"
        ],
        "summary": "Retrieve CRM CA results",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "counterpartyId",
            "in": "query",
            "description": "Counterparty Id",
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Engine/GetCrmMonaResults/{lcId}": {
      "get": {
        "tags": [
          "Engine"
        ],
        "summary": "Retrieve CRM Mona results",
        "parameters": [
          {
            "name": "lcId",
            "in": "path",
            "description": "Id of the LoadCollection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "counterpartyId",
            "in": "query",
            "description": "Counterparty Id",
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/GlobalInput/FindEntitySpec": {
      "get": {
        "tags": [
          "GlobalInput"
        ],
        "summary": "Allow to fetch an item",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Composite Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalInput"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GlobalInput/Search": {
      "get": {
        "tags": [
          "GlobalInput"
        ],
        "summary": "Allow to fetch a list of items",
        "parameters": [
          {
            "name": "loadCollectionId",
            "in": "query",
            "description": "Id of the loadcollection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "property1",
            "in": "query",
            "description": "Value of the property 1",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "string"
          },
          {
            "name": "property2",
            "in": "query",
            "description": "Value of the property 2",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "string"
          },
          {
            "name": "property3",
            "in": "query",
            "description": "Value of the property 3",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "string"
          },
          {
            "name": "property4",
            "in": "query",
            "description": "Value of the property 4",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "string"
          },
          {
            "name": "property5",
            "in": "query",
            "description": "Value of the property 5",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GlobalInput"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GlobalInput": {
      "get": {
        "tags": [
          "GlobalInput"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GlobalInput"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GlobalInput"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "GlobalInput"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GlobalInput/{id}": {
      "get": {
        "tags": [
          "GlobalInput"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalInput"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GlobalInput"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GlobalInput"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/RT01": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to import data from a rt01 file",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the load",
            "schema": {
              "type": "string"
            },
            "example": "My Load"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Reporting date",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-31"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwite the existing data if any",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/RT01Import": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to execute the import step of the UploadRt01",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the load",
            "schema": {
              "type": "string"
            },
            "example": "My Load"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Reporting date",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-31"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwite the existing data if any",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/RT01Calc": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to execute the calculation step of the UploadRt01",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the load",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/Excel": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to import data from an excel file",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the load",
            "schema": {
              "type": "string"
            },
            "example": "My Load"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Reporting date",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-31"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwite the existing data if any",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/Views": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to import from SQL views",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the load",
            "schema": {
              "type": "string"
            },
            "example": "My Load"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Reporting date",
            "schema": {
              "type": "string"
            },
            "example": "2022-12-31"
          },
          {
            "name": "perimeter",
            "in": "query",
            "description": "Perimeter to import",
            "schema": {
              "type": "string",
              "default": "DEFAULT"
            },
            "example": "DEFAULT"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwite the existing data if any",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": true
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/Logs": {
      "get": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to retrieve logs summaries",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the load",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogSummary"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/LogsDetail": {
      "get": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to retrieve logs details",
        "parameters": [
          {
            "name": "logId",
            "in": "query",
            "description": "Id of the log summary",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogSummary"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Import/LoadSnbBasket": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Allow to load the SNB security list",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/InterestRateCurve": {
      "get": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterestRateCurve"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InterestRateCurve"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/InterestRateCurve/{id}": {
      "get": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterestRateCurve"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "InterestRateCurve"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKey": {
      "get": {
        "tags": [
          "IrrbbReplicationKey"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IrrbbReplicationKey"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IrrbbReplicationKey"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKey"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKey"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKey"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IrrbbReplicationKey"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKey"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKey"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKey"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbReplicationKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbReplicationKey/{id}": {
      "get": {
        "tags": [
          "IrrbbReplicationKey"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IrrbbReplicationKey"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IrrbbReplicationKey"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "IrrbbReplicationKey"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbScenario": {
      "get": {
        "tags": [
          "IrrbbScenario"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IrrbbScenario"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IrrbbScenario"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IrrbbScenario"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IrrbbScenario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/IrrbbScenario/{id}": {
      "get": {
        "tags": [
          "IrrbbScenario"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IrrbbScenario"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IrrbbScenario"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "IrrbbScenario"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Lifeline/Flags": {
      "get": {
        "tags": [
          "Lifeline"
        ],
        "summary": "Get the list of all the flags",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LifelineDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Lifeline/PositionFlags": {
      "get": {
        "tags": [
          "Lifeline"
        ],
        "summary": "Get the flags of a position",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the Load",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "id",
            "in": "query",
            "description": "Id of the position",
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LifelineFlag"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/List/Load": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "Allow to load a static file from the API",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the static file",
            "schema": {
              "type": "string"
            },
            "example": "Adaptation"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/List/LoadAll": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "Allow to load all the static files from the docker directory",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/List/SaveAll": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "Allow to save all the static files from the docker directory",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Load": {
      "get": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Load"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Load"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Load/{id}": {
      "get": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Load"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Load"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/LoadCollection/Load": {
      "post": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to add a load to a load collection",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the load",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LoadCollectionId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to remove a load from a load collection",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the load",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LoadCollectionId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/LoadCollection/Detail/{id}": {
      "get": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to retrieve a load collection with details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the load collection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/LoadCollection/Detail": {
      "get": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to retrieve a load collection with details",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/LoadCollection": {
      "get": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoadCollection"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadCollection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/LoadCollection/{id}": {
      "get": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadCollection"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "LoadCollection"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Parameter": {
      "get": {
        "tags": [
          "Parameter"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Parameter"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Parameter"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Parameter"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Parameter/{id}": {
      "get": {
        "tags": [
          "Parameter"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameter"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Parameter"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Parameter"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingEntity/Tree/{id}": {
      "get": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to retrieve the reporting structure for a reporting entity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the reporting entity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ReportingEntity": {
      "get": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportingEntity"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingEntity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingEntity/{id}": {
      "get": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ReportingEntity"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingSet": {
      "get": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportingSet"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/ReportingSet/{id}": {
      "get": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingSet"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ReportingSet"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Reports/Reload": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to reload the reports files",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Reload/{surveyfilename}": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to reload one survey file",
        "parameters": [
          {
            "name": "surveyfilename",
            "in": "path",
            "description": "Name of the file to reload",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "MONA_U.json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Calculate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to calculate a survey",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "keepEdit",
            "in": "query",
            "description": "True to keep the manual edit of the report",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Validate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to validate a survey",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "async",
            "in": "query",
            "description": "False to wait for the task to end",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Breaches": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch breaches",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationBreachDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchSurvey": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch a calculated survey",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "lcIdVariance",
            "in": "query",
            "description": "Load collection ID to get the variance from",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchReport": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch a report",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report",
            "schema": {
              "type": "string"
            },
            "example": "M201"
          },
          {
            "name": "lcIdVariance",
            "in": "query",
            "description": "Load collection ID to get the variance from",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchVarianceSurvey": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the variance between two surveys",
        "parameters": [
          {
            "name": "lcIdA",
            "in": "query",
            "description": "Id of the load collection A",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "lcIdB",
            "in": "query",
            "description": "Id of the load collection B",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchVarianceReport": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the variance between two reports",
        "parameters": [
          {
            "name": "lcIdA",
            "in": "query",
            "description": "Id of the load collection A",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "lcIdB",
            "in": "query",
            "description": "Id of the load collection B",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report",
            "schema": {
              "type": "string"
            },
            "example": "M201"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/CalculateAndFetchSurvey": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to calculate and fetch a survey",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "keepEdit",
            "in": "query",
            "description": "True to keep the manual edit of the report",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalcSurveyDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Audit": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the audit of a cell",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "cellPosition",
            "in": "query",
            "description": "Position of the cell",
            "schema": {
              "type": "string"
            },
            "example": "BILAKTFMINOTICHF"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report if needed",
            "schema": {
              "type": "string"
            },
            "example": "M201"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/AuditPosition": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the audit of a cell for only one position",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "cellPosition",
            "in": "query",
            "description": "Position of the cell",
            "schema": {
              "type": "string"
            },
            "example": "BILAKTFMINOTICHF"
          },
          {
            "name": "positionId",
            "in": "query",
            "description": "Id of the position",
            "schema": {
              "type": "string"
            },
            "example": "28"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report if needed",
            "schema": {
              "type": "string"
            },
            "example": "M201"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Edit": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to edit a cell value",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "cellPosition",
            "in": "query",
            "description": "Position of the cell",
            "schema": {
              "type": "string"
            },
            "example": "BILAKTFMINOTICHF"
          },
          {
            "name": "value",
            "in": "query",
            "description": "New value of the cell",
            "schema": {
              "type": "string"
            },
            "example": "12345"
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Reason of the change",
            "schema": {
              "type": "string"
            },
            "example": "my reason"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/AuditExcel": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the audit of a cell in Excel",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "cellPosition",
            "in": "query",
            "description": "Position of the cell",
            "schema": {
              "type": "string"
            },
            "example": "BILAKTFMINOTICHF"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report if needed",
            "schema": {
              "type": "string"
            },
            "example": "BalanceSheetOverview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Excel": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the audit of a cell in Excel",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "cellPosition",
            "in": "query",
            "description": "Position of the cell",
            "schema": {
              "type": "string"
            },
            "example": "BILAKTFMINOTICHF"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report if needed",
            "schema": {
              "type": "string"
            },
            "example": "BalanceSheetOverview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/ReportExcel": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to fetch the report in Excel",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Name of the report if needed",
            "schema": {
              "type": "string"
            },
            "example": "BalanceSheetOverview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/Export": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to export a survey in XML",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "surveyName",
            "in": "query",
            "description": "Name of the survey",
            "schema": {
              "type": "string"
            },
            "example": "MONA_U"
          },
          {
            "name": "surveyVersion",
            "in": "query",
            "description": "Version of the survey",
            "schema": {
              "type": "string"
            },
            "example": "1.3.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/FetchDynReport": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to retieve an object from the database",
        "parameters": [
          {
            "name": "objectName",
            "in": "query",
            "description": "Name of the object",
            "schema": {
              "type": "string"
            },
            "example": "V_my_view"
          },
          {
            "name": "whereClause",
            "in": "query",
            "description": "Where clause",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "lcId=1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Reports/FetchDynReportByLoadId": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to retieve an object from the database by LoadId",
        "parameters": [
          {
            "name": "loadId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "objectName",
            "in": "query",
            "description": "Name of the object",
            "schema": {
              "type": "string"
            },
            "example": "V_my_view"
          },
          {
            "name": "whereClause",
            "in": "query",
            "description": "Where clause",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "lcId=1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Reports/FetchDynReportByLcId": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Allow to retieve an object from the database by LoadCollectionId",
        "parameters": [
          {
            "name": "lcId",
            "in": "query",
            "description": "Id of the load collection",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "objectName",
            "in": "query",
            "description": "Name of the object",
            "schema": {
              "type": "string"
            },
            "example": "V_my_view"
          },
          {
            "name": "whereClause",
            "in": "query",
            "description": "Where clause",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "lcId=1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Rules": {
      "get": {
        "tags": [
          "Rules"
        ],
        "summary": "Allow to fetch all rules",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RuleGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Rules/{id}": {
      "get": {
        "tags": [
          "Rules"
        ],
        "summary": "Allow to fetch one rule with detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleGroup"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/TagClasses": {
      "get": {
        "tags": [
          "TagClasses"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagClass"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TagClasses"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TagClass"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TagClass"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TagClass"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TagClasses"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TagClass"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TagClass"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TagClass"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/TagClasses/{id}": {
      "get": {
        "tags": [
          "TagClasses"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagClass"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagClasses"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TagClasses"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Allow to fetch all items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Allow to create an item",
        "requestBody": {
          "description": "Item to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Allow to update an item",
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Tags/{id}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Allow to fetch one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Allow to delete one item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tags"
        ],
        "summary": "Allow to patch an item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the item",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Item to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Task/Running": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to fetch all the running tasks",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunningTaskDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Task/LastXTasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to fetch the x last created tasks",
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "description": "Number of tasks to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunningTaskDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Task/TasksSince": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to fetch all the tasks since a date",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "description": "Date from when fetching the tasks",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunningTaskDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Task/Clean": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Allow to end all the running tasks",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunningTaskDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the technical information",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechnicalInfoDTO"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/Infos": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the technical information",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechnicalInfoDTO"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/Logs": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/BusinessLogs": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/LogFile": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day in a file",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/BusinessLogFile": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day in a file",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/TechLogs": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Technical/TechLogFile": {
      "get": {
        "tags": [
          "Technical"
        ],
        "summary": "Allow to fetch the business logs of the day in a file",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Adaptation": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "impact": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "table": {
            "type": "string",
            "nullable": true
          },
          "join": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "bookingCenter": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Amortization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "nextAmortizationDate": {
            "type": "string",
            "format": "date"
          },
          "amortizationAmount": {
            "type": "number",
            "format": "double"
          },
          "amortizationWeight": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "AuditDTO": {
        "type": "object",
        "properties": {
          "row": {
            "type": "string",
            "nullable": true
          },
          "column": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "positionTech": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "sums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditSumDTO"
            },
            "nullable": true
          },
          "editions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalcEditDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditSumDTO": {
        "type": "object",
        "properties": {
          "rulesReport": {
            "type": "string",
            "nullable": true
          },
          "rulesRow": {
            "type": "string",
            "nullable": true
          },
          "rulesColumn": {
            "type": "string",
            "nullable": true
          },
          "rulesCell": {
            "type": "string",
            "nullable": true
          },
          "rule": {
            "type": "string",
            "nullable": true
          },
          "isReference": {
            "type": "boolean"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnDTO"
            },
            "nullable": true
          },
          "positions": {
            "type": "array",
            "items": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookingCenter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "officeType": {
            "type": "string",
            "nullable": true
          },
          "officeCountry": {
            "type": "string",
            "nullable": true
          },
          "officeCanton": {
            "type": "string",
            "nullable": true
          },
          "ownerId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalcCellDTO": {
        "type": "object",
        "properties": {
          "row": {
            "type": "string",
            "nullable": true
          },
          "column": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "positionTech": {
            "type": "string",
            "nullable": true
          },
          "positionTechIgnoreDyn": {
            "type": "string",
            "nullable": true
          },
          "originalValue": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "isEdited": {
            "type": "boolean"
          },
          "editions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalcEditDTO"
            },
            "nullable": true
          },
          "variance": {
            "$ref": "#/components/schemas/CalcVarianceDTO"
          }
        },
        "additionalProperties": false
      },
      "CalcEditDTO": {
        "type": "object",
        "properties": {
          "lastModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalcReportDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalcCellDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalcSurveyDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "calculationDate": {
            "type": "string",
            "format": "date-time"
          },
          "dataDate": {
            "type": "string",
            "format": "date-time"
          },
          "upToDate": {
            "type": "boolean"
          },
          "validated": {
            "type": "boolean"
          },
          "exported": {
            "type": "boolean"
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalcReportDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalcVarianceDTO": {
        "type": "object",
        "properties": {
          "valueA": {
            "type": "number",
            "format": "double"
          },
          "valueB": {
            "type": "number",
            "format": "double"
          },
          "relative": {
            "type": "number",
            "format": "double"
          },
          "absolute": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ColumnDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivativeCalc": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "numberOfUnderlyings": {
            "type": "number",
            "format": "double"
          },
          "replacementValue": {
            "type": "number",
            "format": "double"
          },
          "underlyingMarketValue": {
            "type": "number",
            "format": "double"
          },
          "singleUnderlyingMarketValue": {
            "type": "number",
            "format": "double"
          },
          "ead": {
            "type": "number",
            "format": "double"
          },
          "rCurrency": {
            "type": "string",
            "nullable": true
          },
          "pCurrency": {
            "type": "string",
            "nullable": true
          },
          "rAmount": {
            "type": "number",
            "format": "double"
          },
          "pAmount": {
            "type": "number",
            "format": "double"
          },
          "rpv": {
            "type": "number",
            "format": "double"
          },
          "ppv": {
            "type": "number",
            "format": "double"
          },
          "rInterestPayment": {
            "type": "number",
            "format": "double"
          },
          "pInterestPayment": {
            "type": "number",
            "format": "double"
          },
          "impliedVolatility": {
            "type": "number",
            "format": "double"
          },
          "marGammaWeight": {
            "type": "number",
            "format": "double"
          },
          "marGammaNettingCategory": {
            "type": "string",
            "nullable": true
          },
          "assetClass": {
            "type": "string",
            "nullable": true
          },
          "pfeFactor": {
            "type": "number",
            "format": "float"
          },
          "delta": {
            "type": "number",
            "format": "float"
          },
          "gamma": {
            "type": "number",
            "format": "float"
          },
          "vega": {
            "type": "number",
            "format": "float"
          },
          "sen": {
            "type": "number",
            "format": "float"
          },
          "effectiveNotional": {
            "type": "number",
            "format": "float"
          },
          "adjustedNotional": {
            "type": "number",
            "format": "float"
          },
          "mf": {
            "type": "number",
            "format": "float"
          },
          "mpor": {
            "type": "number",
            "format": "float"
          },
          "supervisoryDelta": {
            "type": "number",
            "format": "float"
          },
          "supervisoryVolatility": {
            "type": "number",
            "format": "float"
          },
          "supervisoryRho": {
            "type": "number",
            "format": "float"
          },
          "sd": {
            "type": "number",
            "format": "float"
          },
          "sf": {
            "type": "number",
            "format": "float"
          },
          "subHedgingSetId": {
            "type": "string",
            "nullable": true
          },
          "hedgingSetId": {
            "type": "string",
            "nullable": true
          },
          "nettingSetId": {
            "type": "string",
            "nullable": true
          },
          "rNextRefixingDays": {
            "type": "integer",
            "format": "int32"
          },
          "pNextRefixingDays": {
            "type": "integer",
            "format": "int32"
          },
          "startDateReferencePeriodDays": {
            "type": "integer",
            "format": "int32"
          },
          "endDateReferencePeriodDays": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Description": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "field": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GlobalInput": {
        "type": "object",
        "properties": {
          "loadCollectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loadCollection": {
            "$ref": "#/components/schemas/LoadCollection"
          },
          "property1": {
            "type": "string",
            "nullable": true
          },
          "property2": {
            "type": "string",
            "nullable": true
          },
          "property3": {
            "type": "string",
            "nullable": true
          },
          "property4": {
            "type": "string",
            "nullable": true
          },
          "property5": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InterestRate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "spread": {
            "type": "number",
            "format": "float"
          },
          "ir": {
            "type": "number",
            "format": "float"
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "nextFixingDate": {
            "type": "string",
            "format": "date"
          },
          "reFixingFrequency": {
            "type": "string",
            "nullable": true
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date"
          },
          "paymentFrequency": {
            "type": "string",
            "nullable": true
          },
          "compoundingType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InterestRateCurve": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "tenor": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "format": "float"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbReplicationKey": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "nullable": true
          },
          "accountGroupLevel1": {
            "type": "string",
            "nullable": true
          },
          "bucket": {
            "type": "integer",
            "format": "int32"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IrrbbScenario": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "nullable": true
          },
          "scenario": {
            "type": "integer",
            "format": "int32"
          },
          "bucket": {
            "type": "integer",
            "format": "int32"
          },
          "shock": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LifelineDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LifelineFlag": {
        "enum": [
          0,
          1,
          2,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "Load": {
        "type": "object",
        "properties": {
          "loadId": {
            "type": "integer",
            "format": "int32"
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "reportingDate": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "amortizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Amortization"
            },
            "nullable": true
          },
          "derivativeCalcs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DerivativeCalc"
            },
            "nullable": true
          },
          "interestRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InterestRate"
            },
            "nullable": true
          },
          "loadCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoadCollection"
            },
            "nullable": true
          },
          "logDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogSummary"
            },
            "nullable": true
          },
          "moduleSpecifics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleSpecific"
            },
            "nullable": true
          },
          "pledges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pledge"
            },
            "nullable": true
          },
          "positionCalcs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCalc"
            },
            "nullable": true
          },
          "positionSingles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionSingle"
            },
            "nullable": true
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Position"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "nullable": true
          },
          "toString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LoadCollection": {
        "type": "object",
        "properties": {
          "loadCollectionId": {
            "type": "integer",
            "format": "int32"
          },
          "createDate": {
            "type": "string",
            "format": "date"
          },
          "reportingDate": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "loads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Load"
            },
            "nullable": true
          },
          "globalInputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalInput"
            },
            "nullable": true
          },
          "reportingEntityId": {
            "type": "string",
            "nullable": true
          },
          "reportingEntity": {
            "$ref": "#/components/schemas/ReportingEntity"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LogDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "logSummaryId": {
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LogType"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "logSummary": {
            "$ref": "#/components/schemas/LogSummary"
          }
        },
        "additionalProperties": false
      },
      "LogSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "loadId": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "warnings": {
            "type": "integer",
            "format": "int64"
          },
          "errors": {
            "type": "integer",
            "format": "int64"
          },
          "lines": {
            "type": "integer",
            "format": "int64"
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "logDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ModuleSpecific": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "forceHQLACategory": {
            "type": "string",
            "nullable": true
          },
          "caForceHaircut": {
            "type": "number",
            "format": "float"
          },
          "caForceRiskWeight": {
            "type": "number",
            "format": "float"
          },
          "lcrForceFlow": {
            "type": "integer",
            "format": "int32"
          },
          "lcrForceRate": {
            "type": "integer",
            "format": "int32"
          },
          "lcrIncludeFlow": {
            "type": "boolean"
          },
          "lcrExcludeFlow": {
            "type": "boolean"
          },
          "excludeZIR": {
            "type": "boolean"
          },
          "forceLIQCurrency": {
            "type": "string",
            "nullable": true
          },
          "forceLiqTypeOf": {
            "type": "string",
            "nullable": true
          },
          "posRiskDomicile": {
            "type": "string",
            "nullable": true
          },
          "posCounterpartyDomicile": {
            "type": "string",
            "nullable": true
          },
          "posIssuerDomicile": {
            "type": "string",
            "nullable": true
          },
          "posHQDomicile": {
            "type": "string",
            "nullable": true
          },
          "posCounterpartyType": {
            "type": "string",
            "nullable": true
          },
          "posIssuerType": {
            "type": "string",
            "nullable": true
          },
          "posClientEconomicActivityType": {
            "type": "string",
            "nullable": true
          },
          "posIssuerEconomicActivityType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Operation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperationType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "Parameter": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Pledge": {
        "type": "object",
        "properties": {
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "receiverId": {
            "type": "string",
            "nullable": true
          },
          "payerPledgeLink": {
            "type": "string",
            "nullable": true
          },
          "receiverPledgeLink": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "maxAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Position": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "amortization": {
            "$ref": "#/components/schemas/Amortization"
          },
          "derivativeCalc": {
            "$ref": "#/components/schemas/DerivativeCalc"
          },
          "moduleSpecific": {
            "$ref": "#/components/schemas/ModuleSpecific"
          },
          "positionCalc": {
            "$ref": "#/components/schemas/PositionCalc"
          },
          "positionsCrmCaExposures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmCa"
            },
            "nullable": true
          },
          "positionsCrmCaCollaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmCa"
            },
            "nullable": true
          },
          "positionsCrmMonaExposures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmMona"
            },
            "nullable": true
          },
          "positionsCrmMonaCollaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCrmMona"
            },
            "nullable": true
          },
          "bookingCenterId": {
            "type": "string",
            "nullable": true
          },
          "legalAccountNumber": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "locationCountry": {
            "type": "string",
            "nullable": true
          },
          "internalReference1": {
            "type": "string",
            "nullable": true
          },
          "internalReference2": {
            "type": "string",
            "nullable": true
          },
          "internalReference3": {
            "type": "string",
            "nullable": true
          },
          "internalReference4": {
            "type": "string",
            "nullable": true
          },
          "internalReference5": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "positionCurrencyBookAmount": {
            "type": "number",
            "format": "double"
          },
          "bookAmount": {
            "type": "number",
            "format": "double"
          },
          "encumberedFlag": {
            "type": "boolean"
          },
          "encumberedAmount": {
            "type": "number",
            "format": "double"
          },
          "encumbranceEndDate": {
            "type": "string",
            "format": "date"
          },
          "notional": {
            "type": "number",
            "format": "double"
          },
          "internalLendingValue": {
            "type": "number",
            "format": "double"
          },
          "pv": {
            "type": "number",
            "format": "double"
          },
          "provision": {
            "type": "number",
            "format": "double"
          },
          "capacity": {
            "type": "string",
            "nullable": true
          },
          "maturityDate": {
            "type": "string",
            "format": "date"
          },
          "maturityType": {
            "type": "string",
            "nullable": true
          },
          "impairedFlag": {
            "type": "boolean"
          },
          "nonPerformingFlag": {
            "type": "boolean"
          },
          "ratingClass": {
            "type": "integer",
            "format": "int32"
          },
          "irbFlag": {
            "type": "boolean"
          },
          "relatedPartyType": {
            "type": "string",
            "nullable": true
          },
          "subordination": {
            "type": "boolean"
          },
          "priorityClaimLevel": {
            "type": "integer",
            "format": "int32"
          },
          "participationLevel": {
            "type": "number",
            "format": "float"
          },
          "goodsXBorderFlag": {
            "type": "boolean"
          },
          "pledgeLink": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "generalLedger": {
            "type": "string",
            "nullable": true
          },
          "tradingBookFlag": {
            "type": "boolean"
          },
          "numberOfComponents": {
            "type": "integer",
            "format": "int32"
          },
          "longContractFlag": {
            "type": "boolean"
          },
          "nettingSetId": {
            "type": "string",
            "nullable": true
          },
          "nettingAgreementType": {
            "type": "string",
            "nullable": true
          },
          "counterpartyId": {
            "type": "string",
            "nullable": true
          },
          "counterpartyPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "counterpartyBookingCenterId": {
            "type": "string",
            "nullable": true
          },
          "marginAgreementId": {
            "type": "string",
            "nullable": true
          },
          "marginAgreementPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clearingFacilityTypeOf": {
            "type": "string",
            "nullable": true
          },
          "clearingFacilityId": {
            "type": "string",
            "nullable": true
          },
          "clearingFacilityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pledgedFlag": {
            "type": "boolean"
          },
          "pledgeEndDate": {
            "type": "string",
            "format": "date"
          },
          "collateralHolderId": {
            "type": "string",
            "nullable": true
          },
          "collateralHolderPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contractId": {
            "type": "string",
            "nullable": true
          },
          "propertyId": {
            "type": "string",
            "nullable": true
          },
          "propertyPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "derivativeId": {
            "type": "string",
            "nullable": true
          },
          "derivativeSwapId": {
            "type": "string",
            "nullable": true
          },
          "securityId": {
            "type": "string",
            "nullable": true
          },
          "securityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commodityId": {
            "type": "string",
            "nullable": true
          },
          "commodityPIT": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "irReference": {
            "type": "string",
            "nullable": true
          },
          "irSpread": {
            "type": "number",
            "format": "float"
          },
          "irSpreadFlag": {
            "type": "boolean"
          },
          "interestRate": {
            "type": "number",
            "format": "float"
          },
          "irTypeOf": {
            "type": "string",
            "nullable": true
          },
          "irNextFixingDate": {
            "type": "string",
            "format": "date"
          },
          "irReFixingFrequency": {
            "type": "string",
            "nullable": true
          },
          "irNextPaymentDate": {
            "type": "string",
            "format": "date"
          },
          "irPaymentFrequency": {
            "type": "string",
            "nullable": true
          },
          "irCompoundingType": {
            "type": "string",
            "nullable": true
          },
          "irDayCount": {
            "type": "string",
            "nullable": true
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "subType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionCalc": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "mortgageLoanClaimLevel": {
            "type": "integer",
            "format": "int32"
          },
          "accountGroupLevel1": {
            "type": "string",
            "nullable": true
          },
          "webeSector": {
            "type": "string",
            "nullable": true
          },
          "riskCountry": {
            "type": "string",
            "nullable": true
          },
          "astaUltimateRiskCountry": {
            "type": "string",
            "nullable": true
          },
          "ccf": {
            "type": "number",
            "format": "float"
          },
          "caRiskWeight": {
            "type": "number",
            "format": "float"
          },
          "leRiskWeight": {
            "type": "number",
            "format": "float"
          },
          "longShort": {
            "type": "string",
            "nullable": true
          },
          "regulatoryHaircut": {
            "type": "number",
            "format": "float"
          },
          "reportingCategory": {
            "type": "string",
            "nullable": true
          },
          "monaExposure": {
            "type": "number",
            "format": "double"
          },
          "monaExposureAfterCRM": {
            "type": "number",
            "format": "double"
          },
          "monaCollateralUsedAmount": {
            "type": "number",
            "format": "double"
          },
          "caEligibilityFlag": {
            "type": "boolean"
          },
          "caExposureFlag": {
            "type": "boolean"
          },
          "caExposure": {
            "type": "number",
            "format": "double"
          },
          "caIssuerExposure": {
            "type": "number",
            "format": "double"
          },
          "caIssuerRiskWeight": {
            "type": "number",
            "format": "double"
          },
          "caIssuerRWA": {
            "type": "number",
            "format": "double"
          },
          "caExposureAfterCRM": {
            "type": "number",
            "format": "double"
          },
          "caCollateralUsedAmount": {
            "type": "number",
            "format": "double"
          },
          "leExposure": {
            "type": "number",
            "format": "double"
          },
          "leExposureAfterCRM": {
            "type": "number",
            "format": "double"
          },
          "leCollateralUsedAmount": {
            "type": "number",
            "format": "double"
          },
          "carwa": {
            "type": "number",
            "format": "double"
          },
          "lerwa": {
            "type": "number",
            "format": "double"
          },
          "initialDurationDays": {
            "type": "integer",
            "format": "int32"
          },
          "residualDurationDays": {
            "type": "integer",
            "format": "int32"
          },
          "residualEncumberedDurationDays": {
            "type": "integer",
            "format": "int32"
          },
          "chAbroadFlag": {
            "type": "boolean"
          },
          "positionDefaultFlag": {
            "type": "boolean"
          },
          "counterpartyDefaultFlag": {
            "type": "boolean"
          },
          "hqlaCategory": {
            "type": "string",
            "nullable": true
          },
          "ownShare": {
            "type": "string",
            "nullable": true
          },
          "lifeLine": {
            "$ref": "#/components/schemas/LifelineFlag"
          },
          "liqTypeOf": {
            "type": "string",
            "nullable": true
          },
          "excessAmountHVD": {
            "type": "number",
            "format": "double"
          },
          "modifiedDuration": {
            "type": "number",
            "format": "float"
          },
          "zirCategory": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PositionCrmCa": {
        "type": "object",
        "properties": {
          "loadCollectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loadCollection": {
            "$ref": "#/components/schemas/LoadCollection"
          },
          "positionExposure": {
            "$ref": "#/components/schemas/Position"
          },
          "positionCollateral": {
            "$ref": "#/components/schemas/Position"
          },
          "collateralLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "collateralId": {
            "type": "string",
            "nullable": true
          },
          "exposureLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "exposureId": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "amountCovered": {
            "type": "number",
            "format": "double"
          },
          "collateralAmountUsed": {
            "type": "number",
            "format": "double"
          },
          "fxHaircut": {
            "type": "number",
            "format": "double"
          },
          "maturityHaircut": {
            "type": "number",
            "format": "double"
          },
          "adaptedHaircut": {
            "type": "number",
            "format": "double"
          },
          "rwa": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PositionCrmMona": {
        "type": "object",
        "properties": {
          "loadCollectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loadCollection": {
            "$ref": "#/components/schemas/LoadCollection"
          },
          "positionExposure": {
            "$ref": "#/components/schemas/Position"
          },
          "positionCollateral": {
            "$ref": "#/components/schemas/Position"
          },
          "collateralLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "collateralId": {
            "type": "string",
            "nullable": true
          },
          "exposureLoadId": {
            "type": "integer",
            "format": "int32"
          },
          "exposureId": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "amountCovered": {
            "type": "number",
            "format": "double"
          },
          "collateralTypeOf": {
            "type": "string",
            "nullable": true
          },
          "collateralSubType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionSingle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "loadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "computedId": {
            "type": "integer",
            "format": "int64"
          },
          "accountNumber": {
            "type": "integer",
            "format": "int32"
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "riskDomicile": {
            "type": "string",
            "nullable": true
          },
          "counterpartyDomicile": {
            "type": "string",
            "nullable": true
          },
          "issuerDomicile": {
            "type": "string",
            "nullable": true
          },
          "hqDomicile": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "ccpType": {
            "type": "integer",
            "format": "int32"
          },
          "foreignCurrencyAmount": {
            "type": "number",
            "format": "double"
          },
          "referenceCurrencyAmount": {
            "type": "number",
            "format": "double"
          },
          "encumberedAmount": {
            "type": "number",
            "format": "double"
          },
          "replacementValueAmount": {
            "type": "number",
            "format": "double"
          },
          "contractVolumeAmount": {
            "type": "number",
            "format": "double"
          },
          "lendingValueAmount": {
            "type": "number",
            "format": "double"
          },
          "marketValueAmount": {
            "type": "number",
            "format": "double"
          },
          "counterpartyType": {
            "type": "integer",
            "format": "int32"
          },
          "maturityDate": {
            "type": "string",
            "format": "date"
          },
          "maturityType": {
            "type": "integer",
            "format": "int32"
          },
          "businessType": {
            "type": "integer",
            "format": "int32"
          },
          "irbReportingCategory": {
            "type": "integer",
            "format": "int32"
          },
          "subordination": {
            "type": "integer",
            "format": "int32"
          },
          "quotationType": {
            "type": "integer",
            "format": "int32"
          },
          "pledgedCashType": {
            "type": "integer",
            "format": "int32"
          },
          "valuationMethod": {
            "type": "integer",
            "format": "int32"
          },
          "relatedParties": {
            "type": "integer",
            "format": "int32"
          },
          "periodicRevaluation": {
            "type": "integer",
            "format": "int32"
          },
          "mortgageRank": {
            "type": "integer",
            "format": "int32"
          },
          "propertyPledge": {
            "type": "integer",
            "format": "int32"
          },
          "externalRating": {
            "type": "integer",
            "format": "int32"
          },
          "finrepMapping": {
            "type": "integer",
            "format": "int32"
          },
          "qualifiedParticipationLevel": {
            "type": "integer",
            "format": "int32"
          },
          "underlyingInstrumentType": {
            "type": "integer",
            "format": "int32"
          },
          "issuerType": {
            "type": "integer",
            "format": "int32"
          },
          "issuerId": {
            "type": "string",
            "nullable": true
          },
          "portfolioId": {
            "type": "string",
            "nullable": true
          },
          "nettingAgreementType": {
            "type": "integer",
            "format": "int32"
          },
          "clientType": {
            "type": "integer",
            "format": "int32"
          },
          "liquidityCategory": {
            "type": "integer",
            "format": "int32"
          },
          "counterpartyGroupId": {
            "type": "string",
            "nullable": true
          },
          "provisionAmount": {
            "type": "number",
            "format": "double"
          },
          "issuedAmount": {
            "type": "number",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "exchangeRate": {
            "type": "number",
            "format": "float"
          },
          "securityId": {
            "type": "string",
            "nullable": true
          },
          "issuerGroupId": {
            "type": "string",
            "nullable": true
          },
          "instrumentId": {
            "type": "string",
            "nullable": true
          },
          "numberOfUnderlying": {
            "type": "number",
            "format": "double"
          },
          "deltaValue": {
            "type": "number",
            "format": "double"
          },
          "interestRate": {
            "type": "number",
            "format": "float"
          },
          "interestPaymentFrequency": {
            "type": "integer",
            "format": "int32"
          },
          "interestRateType": {
            "type": "integer",
            "format": "int32"
          },
          "nextInterestFixingDate": {
            "type": "string",
            "format": "date"
          },
          "vegaValue": {
            "type": "number",
            "format": "double"
          },
          "instrumentType": {
            "type": "integer",
            "format": "int32"
          },
          "internalAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "intercompanyEntity": {
            "type": "string",
            "nullable": true
          },
          "intercompanyEntityType": {
            "type": "string",
            "nullable": true
          },
          "collateralPledgeId": {
            "type": "string",
            "nullable": true
          },
          "nextInterestPaymentDate": {
            "type": "string",
            "format": "date"
          },
          "counterpartySize": {
            "type": "integer",
            "format": "int32"
          },
          "canton": {
            "type": "string",
            "nullable": true
          },
          "nettingSetId1": {
            "type": "string",
            "nullable": true
          },
          "nettingSetId2": {
            "type": "string",
            "nullable": true
          },
          "noga": {
            "type": "integer",
            "format": "int32"
          },
          "customField1": {
            "type": "string",
            "nullable": true
          },
          "customField2": {
            "type": "string",
            "nullable": true
          },
          "customField3": {
            "type": "number",
            "format": "double"
          },
          "customField4": {
            "type": "integer",
            "format": "int32"
          },
          "customField5": {
            "type": "integer",
            "format": "int32"
          },
          "probabilityDefault": {
            "type": "number",
            "format": "float"
          },
          "expectedLoss": {
            "type": "number",
            "format": "float"
          },
          "encumberedDate": {
            "type": "string",
            "format": "date"
          },
          "startingDate": {
            "type": "string",
            "format": "date"
          },
          "classLoansProbabilityDefault": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Property": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "pointInTime": {
            "type": "integer",
            "format": "int32"
          },
          "typeOf": {
            "type": "string",
            "nullable": true
          },
          "useOf": {
            "type": "string",
            "nullable": true
          },
          "marketValue": {
            "type": "number",
            "format": "double"
          },
          "acquisitionValue": {
            "type": "number",
            "format": "double"
          },
          "rentalValue": {
            "type": "number",
            "format": "double"
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "canton": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "acquisitionDate": {
            "type": "string",
            "format": "date"
          },
          "lendingValue": {
            "type": "number",
            "format": "double"
          },
          "portfolioId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingEntity": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "loadCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoadCollection"
            },
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "snbCode": {
            "type": "string",
            "nullable": true
          },
          "finmaCategory": {
            "type": "integer",
            "format": "int32"
          },
          "consoLevelBankOffice": {
            "type": "boolean"
          },
          "consoLevelParentCompany": {
            "type": "boolean"
          },
          "consoLevelGroup": {
            "type": "boolean"
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "nullable": true
          },
          "postBox": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactType": {
            "type": "string",
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "subGroupName": {
            "type": "string",
            "nullable": true
          },
          "divisionName": {
            "type": "string",
            "nullable": true
          },
          "referredPerson": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingSet": {
        "type": "object",
        "properties": {
          "reportingEntityId": {
            "type": "string",
            "nullable": true
          },
          "consolidatedBookingCenterId": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "officeType": {
            "type": "string",
            "nullable": true
          },
          "officeCountry": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RuleGroup": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "where": {
            "type": "string",
            "nullable": true
          },
          "tableAlias": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "field": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "ruleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RuleItem": {
        "type": "object",
        "properties": {
          "ruleGroupId": {
            "type": "string",
            "nullable": true
          },
          "ruleGroup": {
            "$ref": "#/components/schemas/RuleGroup"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RunningTaskDTO": {
        "type": "object",
        "properties": {
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "query": {
            "$ref": "#/components/schemas/RunningTaskQueryDTO"
          },
          "isStarted": {
            "type": "boolean",
            "readOnly": true
          },
          "isOver": {
            "type": "boolean",
            "readOnly": true
          },
          "isCompleted": {
            "type": "boolean",
            "readOnly": true
          },
          "isError": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RunningTaskQueryDTO": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          },
          "loadId": {
            "type": "integer",
            "format": "int32"
          },
          "lcId": {
            "type": "integer",
            "format": "int32"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "desc": {
            "type": "string",
            "nullable": true
          },
          "tagClassId": {
            "type": "string",
            "nullable": true
          },
          "tagClass": {
            "$ref": "#/components/schemas/TagClass"
          }
        },
        "additionalProperties": false
      },
      "TagClass": {
        "required": [
          "desc",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "desc": {
            "minLength": 1,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TechnicalInfoDTO": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "datetime": {
            "type": "string",
            "format": "date-time"
          },
          "dbProviderName": {
            "type": "string",
            "nullable": true
          },
          "dbServerName": {
            "type": "string",
            "nullable": true
          },
          "dbName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "microseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nanoseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMicroseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalNanoseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ValidationBreachDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "errorDescription": {
            "type": "string",
            "nullable": true
          },
          "isError": {
            "type": "boolean"
          },
          "tolerance": {
            "type": "number",
            "format": "double"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationBreachDetailDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationBreachDetailDTO": {
        "type": "object",
        "properties": {
          "isTechError": {
            "type": "boolean"
          },
          "formulaTech": {
            "type": "string",
            "nullable": true
          },
          "formulaValues": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Input your Bearer token in this format - Bearer {your token here} to access this API",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}